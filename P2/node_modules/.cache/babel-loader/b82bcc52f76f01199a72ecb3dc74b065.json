{"ast":null,"code":"import _classCallCheck from\"/cs/home/wl39/Documents/CS3101/P2/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/cs/home/wl39/Documents/CS3101/P2/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/cs/home/wl39/Documents/CS3101/P2/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/cs/home/wl39/Documents/CS3101/P2/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import styles from'./Button.module.css';import React from\"react\";/**\n * Button class is a button component\n * \n * This component contains three states\n * 1. text: will be loacted in the button\n * 2. styleName: can choose one of css options\n *      white\n *      transparent\n * 3. inlineStyle: user can pass an inline css as a props\n * \n * Button Component can hold these props\n * text: name of the button\n * styleName: a css option\n * inlineStyle: inline css\n * onclick: a function\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Button=/*#__PURE__*/function(_React$Component){_inherits(Button,_React$Component);var _super=_createSuper(Button);function Button(props){var _this;_classCallCheck(this,Button);_this=_super.call(this,props);_this.state={text:_this.props.text?_this.props.text:\"BUTTON\",styleName:{},inlineStyle:_this.props.inlineStyle?_this.props.inlineStyle:{},textStyle:_this.props.textStyle?_this.props.textStyle:{}};switch(_this.props.styleName){case'white':_this.state.styleName=styles.buttonWhite;break;case'transparent':_this.state.styleName=styles.buttonTransparent;break;default:_this.state.styleName=styles.buttonBlack;break;}return _this;}_createClass(Button,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:this.state.styleName,style:this.state.inlineStyle,onClick:this.props.onclick,children:[this.props.account?/*#__PURE__*/_jsx(\"img\",{style:{margin:\"-5px 3px\",display:\"inline-block\"},src:this.props.account,alt:\"account\"}):null,/*#__PURE__*/_jsx(\"div\",{style:this.state.textStyle,children:this.state.text})]});}}]);return Button;}(React.Component);export default Button;","map":{"version":3,"sources":["/cs/home/wl39/Documents/CS3101/P2/src/components/Button/Button.jsx"],"names":["styles","React","Button","props","state","text","styleName","inlineStyle","textStyle","buttonWhite","buttonTransparent","buttonBlack","onclick","account","margin","display","Component"],"mappings":"4cAAA,MAAOA,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,2FACMC,CAAAA,M,4GACF,gBAAYC,KAAZ,CAAmB,wCACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,IAAI,CAAE,MAAKF,KAAL,CAAWE,IAAX,CAAkB,MAAKF,KAAL,CAAWE,IAA7B,CAAoC,QADjC,CAETC,SAAS,CAAE,EAFF,CAGTC,WAAW,CAAE,MAAKJ,KAAL,CAAWI,WAAX,CAAyB,MAAKJ,KAAL,CAAWI,WAApC,CAAkD,EAHtD,CAITC,SAAS,CAAE,MAAKL,KAAL,CAAWK,SAAX,CAAuB,MAAKL,KAAL,CAAWK,SAAlC,CAA8C,EAJhD,CAAb,CAMA,OAAQ,MAAKL,KAAL,CAAWG,SAAnB,EACI,IAAK,OAAL,CACI,MAAKF,KAAL,CAAWE,SAAX,CAAuBN,MAAM,CAACS,WAA9B,CACA,MACJ,IAAK,aAAL,CACI,MAAKL,KAAL,CAAWE,SAAX,CAAuBN,MAAM,CAACU,iBAA9B,CACA,MACJ,QACI,MAAKN,KAAL,CAAWE,SAAX,CAAuBN,MAAM,CAACW,WAA9B,CACA,MATR,CARe,aAmBlB,C,yCAED,iBAAS,CACL,mBACI,aAAK,SAAS,CAAE,KAAKP,KAAL,CAAWE,SAA3B,CAAsC,KAAK,CAAE,KAAKF,KAAL,CAAWG,WAAxD,CAAqE,OAAO,CAAE,KAAKJ,KAAL,CAAWS,OAAzF,WACK,KAAKT,KAAL,CAAWU,OAAX,cAAqB,YAAK,KAAK,CAAE,CAAEC,MAAM,CAAE,UAAV,CAAsBC,OAAO,CAAE,cAA/B,CAAZ,CAA4D,GAAG,CAAE,KAAKZ,KAAL,CAAWU,OAA5E,CAAqF,GAAG,CAAC,SAAzF,EAArB,CAA6H,IADlI,cAEI,YAAK,KAAK,CAAE,KAAKT,KAAL,CAAWI,SAAvB,UACK,KAAKJ,KAAL,CAAWC,IADhB,EAFJ,GADJ,CAQH,C,oBA/BgBJ,KAAK,CAACe,S,EAkC3B,cAAed,CAAAA,MAAf","sourcesContent":["import styles from './Button.module.css';\nimport React from \"react\";\n\n/**\n * Button class is a button component\n * \n * This component contains three states\n * 1. text: will be loacted in the button\n * 2. styleName: can choose one of css options\n *      white\n *      transparent\n * 3. inlineStyle: user can pass an inline css as a props\n * \n * Button Component can hold these props\n * text: name of the button\n * styleName: a css option\n * inlineStyle: inline css\n * onclick: a function\n */\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: this.props.text ? this.props.text : \"BUTTON\",\n            styleName: {},\n            inlineStyle: this.props.inlineStyle ? this.props.inlineStyle : {},\n            textStyle: this.props.textStyle ? this.props.textStyle : {}\n        }\n        switch (this.props.styleName) {\n            case 'white':\n                this.state.styleName = styles.buttonWhite\n                break;\n            case 'transparent':\n                this.state.styleName = styles.buttonTransparent\n                break;\n            default:\n                this.state.styleName = styles.buttonBlack\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.state.styleName} style={this.state.inlineStyle} onClick={this.props.onclick}>\n                {this.props.account ? <img style={{ margin: \"-5px 3px\", display: \"inline-block\"}} src={this.props.account} alt=\"account\" /> : null}\n                <div style={this.state.textStyle}>\n                    {this.state.text}\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Button"]},"metadata":{},"sourceType":"module"}