{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onClick\", \"onTouchStart\"];\nimport * as React from 'react';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { useForkRef, useEventCallback, ownerDocument } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PickersPopperRoot = styled(Popper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: theme.zIndex.modal\n  };\n});\nconst PickersPopperPaper = styled(Paper)(_ref2 => {\n  let {\n    ownerState\n  } = _ref2;\n  return _extends({\n    transformOrigin: 'top center',\n    outline: 0\n  }, ownerState.placement === 'top' && {\n    transformOrigin: 'bottom center'\n  });\n});\nconst PickersPopperAction = styled(DialogActions)(_ref3 => {\n  let {\n    ownerState\n  } = _ref3;\n  return _extends({}, ownerState.clearable ? {\n    justifyContent: 'flex-start',\n    '& > *:first-of-type': {\n      marginRight: 'auto'\n    }\n  } : {\n    padding: 0\n  });\n});\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\n\n\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    } // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n\n\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    } // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n\n\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!nodeRef.current || // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway); // cleanup `handleClickAway`\n\n        syntheticEventRef.current = false;\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\n\nexport const PickersPopper = props => {\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    onClose,\n    onClear,\n    clearable = false,\n    clearText = 'Clear',\n    open,\n    PopperProps,\n    role,\n    TransitionComponent = Grow,\n    TrapFocusProps,\n    PaperProps = {}\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onClose);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n\n  const {\n    onClick: onPaperClickProp,\n    onTouchStart: onPaperTouchStartProp\n  } = PaperProps,\n        otherPaperProps = _objectWithoutPropertiesLoose(PaperProps, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersPopperRoot, _extends({\n    transition: true,\n    role: role,\n    open: open,\n    anchorEl: anchorEl,\n    ownerState: ownerState\n  }, PopperProps, {\n    children: _ref4 => {\n      let {\n        TransitionProps,\n        placement\n      } = _ref4;\n      return /*#__PURE__*/_jsx(TrapFocus, _extends({\n        open: open,\n        disableAutoFocus: true,\n        disableEnforceFocus: role === 'tooltip',\n        isEnabled: () => true\n      }, TrapFocusProps, {\n        children: /*#__PURE__*/_jsx(TransitionComponent, _extends({}, TransitionProps, {\n          children: /*#__PURE__*/_jsxs(PickersPopperPaper, _extends({\n            tabIndex: -1,\n            elevation: 8,\n            ref: handlePaperRef,\n            onClick: event => {\n              onPaperClick(event);\n\n              if (onPaperClickProp) {\n                onPaperClickProp(event);\n              }\n            },\n            onTouchStart: event => {\n              onPaperTouchStart(event);\n\n              if (onPaperTouchStartProp) {\n                onPaperTouchStartProp(event);\n              }\n            },\n            ownerState: _extends({}, ownerState, {\n              placement\n            })\n          }, otherPaperProps, {\n            children: [children, /*#__PURE__*/_jsx(PickersPopperAction, {\n              ownerState: ownerState,\n              children: clearable && /*#__PURE__*/_jsx(Button, {\n                onClick: onClear,\n                children: clearText\n              })\n            })]\n          }))\n        }))\n      }));\n    }\n  }));\n};","map":{"version":3,"sources":["/cs/home/wl39/Documents/CS3101/P2/node_modules/@mui/x-date-pickers/internals/components/PickersPopper.js"],"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","Grow","Paper","Popper","TrapFocus","useForkRef","useEventCallback","ownerDocument","styled","Button","DialogActions","jsx","_jsx","jsxs","_jsxs","PickersPopperRoot","theme","zIndex","modal","PickersPopperPaper","ownerState","transformOrigin","outline","placement","PickersPopperAction","clearable","justifyContent","marginRight","padding","clickedRootScrollbar","event","doc","documentElement","clientWidth","clientX","clientHeight","clientY","useClickAwayListener","active","onClickAway","movedRef","useRef","syntheticEventRef","nodeRef","activatedRef","useEffect","undefined","armClickAwayListener","current","document","addEventListener","removeEventListener","handleClickAway","insideReactTree","insideDOM","composedPath","indexOf","contains","target","handleSynthetic","handleTouchMove","PickersPopper","props","anchorEl","children","containerRef","onClose","onClear","clearText","open","PopperProps","role","TransitionComponent","TrapFocusProps","PaperProps","handleKeyDown","nativeEvent","key","lastFocusedElementRef","activeElement","HTMLElement","focus","clickAwayRef","onPaperClick","onPaperTouchStart","paperRef","handleRef","handlePaperRef","onClick","onPaperClickProp","onTouchStart","onPaperTouchStartProp","otherPaperProps","transition","TransitionProps","disableAutoFocus","disableEnforceFocus","isEnabled","tabIndex","elevation","ref"],"mappings":"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","sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"onClick\", \"onTouchStart\"];\nimport * as React from 'react';\nimport Grow from '@mui/material/Grow';\nimport Paper from '@mui/material/Paper';\nimport Popper from '@mui/material/Popper';\nimport TrapFocus from '@mui/material/Unstable_TrapFocus';\nimport { useForkRef, useEventCallback, ownerDocument } from '@mui/material/utils';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport DialogActions from '@mui/material/DialogActions';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PickersPopperRoot = styled(Popper)(({\n  theme\n}) => ({\n  zIndex: theme.zIndex.modal\n}));\nconst PickersPopperPaper = styled(Paper)(({\n  ownerState\n}) => _extends({\n  transformOrigin: 'top center',\n  outline: 0\n}, ownerState.placement === 'top' && {\n  transformOrigin: 'bottom center'\n}));\nconst PickersPopperAction = styled(DialogActions)(({\n  ownerState\n}) => _extends({}, ownerState.clearable ? {\n  justifyContent: 'flex-start',\n  '& > *:first-of-type': {\n    marginRight: 'auto'\n  }\n} : {\n  padding: 0\n}));\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n\n/**\n * Based on @mui/material/ClickAwayListener without the customization.\n * We can probably strip away even more since children won't be portaled.\n * @param {boolean} active Only listen to clicks when the popper is opened.\n * @param {(event: MouseEvent | TouchEvent) => void} onClickAway The callback to call when clicking outside the popper.\n * @returns {Array} The ref and event handler to listen to the outside clicks.\n */\nfunction useClickAwayListener(active, onClickAway) {\n  const movedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  React.useEffect(() => {\n    if (!active) {\n      return undefined;\n    } // Ensure that this hook is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n\n\n    function armClickAwayListener() {\n      activatedRef.current = true;\n    }\n\n    document.addEventListener('mousedown', armClickAwayListener, true);\n    document.addEventListener('touchstart', armClickAwayListener, true);\n    return () => {\n      document.removeEventListener('mousedown', armClickAwayListener, true);\n      document.removeEventListener('touchstart', armClickAwayListener, true);\n      activatedRef.current = false;\n    };\n  }, [active]); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    if (!activatedRef.current) {\n      return;\n    } // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n\n\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!nodeRef.current || // is a TouchEvent?\n    'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains(event.target) || nodeRef.current.contains(event.target);\n    }\n\n    if (!insideDOM && !insideReactTree) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const handleSynthetic = () => {\n    syntheticEventRef.current = true;\n  };\n\n  React.useEffect(() => {\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener('touchstart', handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener('touchstart', handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  React.useEffect(() => {\n    // TODO This behavior is not tested automatically\n    // It's unclear whether this is due to different update semantics in test (batched in act() vs discrete on click).\n    // Or if this is a timing related issues due to different Transition components\n    // Once we get rid of all the manual scheduling (e.g. setTimeout(update, 0)) we can revisit this code+test.\n    if (active) {\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener('click', handleClickAway);\n      return () => {\n        doc.removeEventListener('click', handleClickAway); // cleanup `handleClickAway`\n\n        syntheticEventRef.current = false;\n      };\n    }\n\n    return undefined;\n  }, [active, handleClickAway]);\n  return [nodeRef, handleSynthetic, handleSynthetic];\n}\n\nexport const PickersPopper = props => {\n  const {\n    anchorEl,\n    children,\n    containerRef = null,\n    onClose,\n    onClear,\n    clearable = false,\n    clearText = 'Clear',\n    open,\n    PopperProps,\n    role,\n    TransitionComponent = Grow,\n    TrapFocusProps,\n    PaperProps = {}\n  } = props;\n  React.useEffect(() => {\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        onClose();\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n  const lastFocusedElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (role === 'tooltip') {\n      return;\n    }\n\n    if (open) {\n      lastFocusedElementRef.current = document.activeElement;\n    } else if (lastFocusedElementRef.current && lastFocusedElementRef.current instanceof HTMLElement) {\n      lastFocusedElementRef.current.focus();\n    }\n  }, [open, role]);\n  const [clickAwayRef, onPaperClick, onPaperTouchStart] = useClickAwayListener(open, onClose);\n  const paperRef = React.useRef(null);\n  const handleRef = useForkRef(paperRef, containerRef);\n  const handlePaperRef = useForkRef(handleRef, clickAwayRef);\n  const ownerState = props;\n\n  const {\n    onClick: onPaperClickProp,\n    onTouchStart: onPaperTouchStartProp\n  } = PaperProps,\n        otherPaperProps = _objectWithoutPropertiesLoose(PaperProps, _excluded);\n\n  return /*#__PURE__*/_jsx(PickersPopperRoot, _extends({\n    transition: true,\n    role: role,\n    open: open,\n    anchorEl: anchorEl,\n    ownerState: ownerState\n  }, PopperProps, {\n    children: ({\n      TransitionProps,\n      placement\n    }) => /*#__PURE__*/_jsx(TrapFocus, _extends({\n      open: open,\n      disableAutoFocus: true,\n      disableEnforceFocus: role === 'tooltip',\n      isEnabled: () => true\n    }, TrapFocusProps, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({}, TransitionProps, {\n        children: /*#__PURE__*/_jsxs(PickersPopperPaper, _extends({\n          tabIndex: -1,\n          elevation: 8,\n          ref: handlePaperRef,\n          onClick: event => {\n            onPaperClick(event);\n\n            if (onPaperClickProp) {\n              onPaperClickProp(event);\n            }\n          },\n          onTouchStart: event => {\n            onPaperTouchStart(event);\n\n            if (onPaperTouchStartProp) {\n              onPaperTouchStartProp(event);\n            }\n          },\n          ownerState: _extends({}, ownerState, {\n            placement\n          })\n        }, otherPaperProps, {\n          children: [children, /*#__PURE__*/_jsx(PickersPopperAction, {\n            ownerState: ownerState,\n            children: clearable && /*#__PURE__*/_jsx(Button, {\n              onClick: onClear,\n              children: clearText\n            })\n          })]\n        }))\n      }))\n    }))\n  }));\n};"]},"metadata":{},"sourceType":"module"}