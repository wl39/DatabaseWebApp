{"version":3,"sources":["components/Card/Card.module.css","assets/views/MatchPage/MatchPage.module.css","assets/views/AdminPage/AdminPage.module.css","components/Button/Button.jsx","components/Header/Header.jsx","components/Card/Card.jsx","assets/images/main.jpg","assets/views/MainPage/MainPage.jsx","axios/axios.js","assets/views/PlayerPage/PlayerPage.jsx","assets/views/AdminPage/AdminPage.jsx","assets/views/MatchPage/MatchPage.jsx","assets/views/MatchPage/MatchDetail.jsx","App.js","index.js","assets/views/MainPage/MainPage.module.css","assets/views/PlayerPage/PlayerPage.module.css","components/Header/Header.module.css","components/Button/Button.module.css"],"names":["module","exports","Button","props","state","text","styleName","inlineStyle","textStyle","styles","buttonWhite","buttonTransparent","buttonBlack","className","this","style","onClick","onclick","account","margin","display","src","alt","React","Component","mainButton","width","height","lineHeight","playerButton","headerScrolled","backgroundColor","boxShadow","Header","listenScroll","window","pageYOffset","setState","scrolled","login","register","searchQuery","addEventListener","removeEventListener","location","pathname","header","headerNotMain","to","link","Card","children","result","split","forEach","element","inlineStyles","MainPage","image","main","greeting","latestHeader","marginBottom","flexDirection","getFullName","callback","email","user","axios","defaults","headers","get","then","res","data","getVenues","getMatchWithNames","query","PlayerPage","getAge","dob","milli","Date","Math","floor","getPlayersCallback","playerPage","phoneNumbers","number","index","push","marginLeft","marginRight","rowContainer","nameContainer","fullName","dateOfBirth","elo","phoneContainer","player","playerPageHeader","AdminPage","inputHandler","event","toChange","target","value","phoneHandler","phoneIndex","phones","phoneNumber","phoneTypeHandler","phoneType","addNewPhone","newIndex","length","TextField","fullWidth","label","color","onChange","Autocomplete","disablePortal","id","options","renderInput","params","user1Handler","matchP1","user2Handler","matchP2","surfaceHandler","courtSufcae","getCourtWithVenueCallback","courtValue","courtDisabled","courtList","MenuItem","toString","surface","newCourtNumber","venueHandler","venueName","venueValue","courtHandler","playerModalOpen","playerModalClose","forename","middleNames","surname","matchModalOpen","match","matchModalClose","matchDate","set1P1Value","set1P2Value","set2P1Value","set2P2Value","set3P1Value","set3P2Value","courtModalOpen","court","courtModalClose","venueModalOpen","venue","venueModalClose","getVenuesCallback","venueList","name","address","venuesList","getSimplePlayersCallback","playerList","playersList","createNewPlayerCallback","alert","createNewMatchCllback","createNewMatch","setToSend","parseInt","sendState","post","catch","error","response","createNewPlayer","middleNamesArray","phoneToSend","pop","createNewVenueCallback","addVenue","addVenueAddress","createNewVenue","stateToSend","createNewCourtCallback","addCourtSurface","createNewCourt","addCourtSurfaceHandler","matchIndex","admin","cardContainer","sx","padding","CardContent","playerHeader","playerSub","buttonContainer","variant","Modal","open","onClose","position","top","left","transform","overflowY","inputContainer","required","defaultValue","type","disabled","playerButtonContainer","FormControl","InputLabel","Select","labelId","paddingBottom","setScoreContainer","eachSetContainer","setHeader","createButtonContainer","MatchPage","handleVenueToggle","newQuery","currentIndex","venuesChecked","indexOf","newChecked","splice","join","venueQuery","getMatchWithNamesCallback","surfaceQuery","handleSurfaceToggle","surfacesChecked","toLocaleLowerCase","venues","matchPage","i","console","log","matchTitle","dateOfPlayed","courtDetail","courtNumber","userDetails","winner","plain","arrowUp","arrowDown","versus","linkContainer","matchDetails","matchPageHeader","matchOption","List","maxWidth","bgcolor","map","ListItem","disablePadding","ListItemButton","role","undefined","dense","ListItemText","primary","ListItemIcon","Checkbox","edge","checked","tabIndex","disableRipple","inputProps","MatchDetailPage","getFullNameCallback","p1user","p1userELO","p2user","p2userELO","getMatchesCallback","p1Email","p2Email","p1","p2","setTag","set","p1Score","p2Score","setContainer","setNumber","scoresContainer","datePlayed","borderRadius","setsContainer","App","path","component","exact","withRouter","ReactDOM","render","document","getElementById"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,UAAY,wBAAwB,UAAY,wBAAwB,kBAAoB,gCAAgC,iBAAmB,+BAA+B,MAAQ,oBAAoB,gBAAgB,4BAA4B,OAAS,qBAAqB,SAAW,uBAAuB,SAAW,yB,mBCAnVD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,gBAAkB,mCAAmC,OAAS,0BAA0B,WAAa,8BAA8B,YAAc,+BAA+B,YAAc,+BAA+B,MAAQ,yBAAyB,UAAY,6BAA6B,QAAU,2BAA2B,OAAS,0BAA0B,YAAc,+BAA+B,cAAgB,iCAAiC,aAAe,gCAAgC,gBAAkB,mCAAmC,cAAgB,iCAAiC,aAAe,gCAAgC,UAAY,6BAA6B,gBAAkB,qC,yCCA/vBD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,cAAgB,iCAAiC,aAAe,gCAAgC,UAAY,6BAA6B,gBAAkB,mCAAmC,eAAiB,kCAAkC,kBAAoB,qCAAqC,iBAAmB,oCAAoC,UAAY,6BAA6B,sBAAwB,yCAAyC,sBAAwB,2C,2KCoDvgBC,E,kDAjCX,WAAYC,GAAQ,IAAD,EAQf,OARe,qBACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,EAAKF,MAAME,KAAO,EAAKF,MAAME,KAAO,SAC1CC,UAAW,GACXC,YAAa,EAAKJ,MAAMI,YAAc,EAAKJ,MAAMI,YAAc,GAC/DC,UAAW,EAAKL,MAAMK,UAAY,EAAKL,MAAMK,UAAY,IAErD,EAAKL,MAAMG,WACf,IAAK,QACD,EAAKF,MAAME,UAAYG,IAAOC,YAC9B,MACJ,IAAK,cACD,EAAKN,MAAME,UAAYG,IAAOE,kBAC9B,MACJ,QACI,EAAKP,MAAME,UAAYG,IAAOG,YAhBvB,S,0CAqBnB,WACI,OACI,sBAAKC,UAAWC,KAAKV,MAAME,UAAWS,MAAOD,KAAKV,MAAMG,YAAaS,QAASF,KAAKX,MAAMc,QAAzF,UACKH,KAAKX,MAAMe,QAAU,qBAAKH,MAAO,CAAEI,OAAQ,WAAYC,QAAS,gBAAiBC,IAAKP,KAAKX,MAAMe,QAASI,IAAI,YAAe,KAC9H,qBAAKP,MAAOD,KAAKV,MAAMI,UAAvB,SACKM,KAAKV,MAAMC,c,GA3BXkB,IAAMC,W,iBCdrBC,EAAa,CACfC,MAAO,QACPC,OAAQ,OACRC,WAAY,QAEVC,EAAe,CACjBH,MAAO,QACPC,OAAQ,OACRC,WAAY,QAGVE,EAAiB,CACnBC,gBAAiB,QACjBC,UAAW,iCA+EAC,E,kDA3EX,WAAY9B,GAAQ,IAAD,8BACf,cAAMA,IAUV+B,aAAe,WACPC,OAAOC,aAAe,IACtB,EAAKC,SAAS,CACVC,UAAU,IAGd,EAAKD,SAAS,CACVC,UAAU,KAhBlB,EAAKlC,MAAQ,CACTkC,UAAU,EACVC,OAAO,EACPC,UAAU,EACVC,YAAa,IANF,E,qDAuBnB,WACIN,OAAOO,iBAAiB,SAAU5B,KAAKoB,gB,kCAG3C,WACIC,OAAOQ,oBAAoB,SAAU7B,KAAKoB,gB,oBAG9C,WACI,OACI,sBAAKnB,MAAOD,KAAKV,MAAMkC,SAAWR,EAAiB,GAAIjB,UAA4C,MAAjCC,KAAKX,MAAMyC,SAASC,SAAmBpC,IAAOqC,OAASrC,IAAOsC,cAAhI,UAEI,cAAC,IAAD,CAAMC,GAAG,IAAInC,UAAWJ,IAAOwC,KAA/B,SACI,cAAC,EAAD,CAAQ5C,KAAK,WACTE,YAAakB,EACbnB,UAAU,kBAGiB,WAAjCQ,KAAKX,MAAMyC,SAASC,SAGlB,cAAC,IAAD,CAAMG,GAAG,SAASnC,UAAWJ,IAAOwC,KAApC,SACI,cAAC,EAAD,CAAQ5C,KAAK,MACTE,YAAasB,EACbvB,UAAU,kBAGhB,KAC6B,MAAjCQ,KAAKX,MAAMyC,SAASC,UAAqD,YAAjC/B,KAAKX,MAAMyC,SAASC,SAE1D,cAAC,IAAD,CAAMG,GAAG,UAAUnC,UAAWJ,IAAOwC,KAArC,SACI,cAAC,EAAD,CAAQ5C,KAAK,SACTE,YAAasB,EACbvB,UAAU,kBAGhB,KAC6B,WAAjCQ,KAAKX,MAAMyC,SAASC,SAGlB,cAAC,IAAD,CAAMG,GAAG,SAASnC,UAAWJ,IAAOwC,KAApC,SACI,cAAC,EAAD,CAAQ5C,KAAK,QACTE,YAAasB,EACbvB,UAAU,kBAGhB,Y,GAtEDiB,IAAMC,W,2BCIZ0B,MAtBf,YAA6B,IAAV/C,EAAS,oBAEpBgD,EACAhD,EADAgD,SAGAC,EAAM,GAUV,OARIjD,EAAMG,WACSH,EAAMG,UAAU+C,MAAM,KAE5BC,SAAQ,SAAAC,GACbH,GAAM,UAAO3C,IAAO8C,GAAd,QAKV,qBAAK1C,UAAWuC,EAAQrC,MAAOZ,EAAMqD,aAArC,SACKL,KCpBE,MAA0B,iC,iBCKnCM,E,4JAEF,WACI,OACI,gCACI,qBAAK5C,UAAWJ,IAAOiD,MAAOrC,IAAKsC,EAAMrC,IAAI,SAC7C,qBAAKT,UAAWJ,IAAOmD,SAAvB,mEAGA,sBAAK/C,UAAWJ,IAAOkD,KAAvB,UACI,qBAAK9C,UAAWJ,IAAOoD,eAEvB,eAAC,EAAD,CAAMvD,UAAU,kCAAkCkD,aAAc,CAAE9B,MAAO,OAAQoC,aAAc,OAAQ1C,QAAS,OAAQ2C,cAAe,UAAvI,UACI,qBAAKlD,UAAWJ,IAAOoD,aAAvB,mEAGA,qBAAKhD,UAAWJ,IAAOoD,aAAvB,2EAGA,qBAAKhD,UAAWJ,IAAOoD,aAAvB,mF,GAnBDtC,IAAMC,WA+BdiC,I,yBChBTO,EAAc,SAACC,EAAUC,EAAOC,GAClCC,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,oDAAsDL,EAC5D,CACII,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,KAAMP,OAqBrBQ,EAAY,SAACV,GACfG,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,uCACN,CACID,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,UAuGfE,EAAoB,SAACX,EAAUY,GACjCT,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,iDAAmDM,EAEzD,CACIP,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,U,iBCjGNI,E,kDA9EX,WAAY3E,GAAQ,IAAD,8BACf,cAAMA,IAOV4E,OAAS,SAACC,GACN,IAAIC,EAAQ,IAAIC,KAAS,IAAIA,KAAKF,GAClC,OAAOG,KAAKC,MAAMH,EAAQ,IAAO,GAAK,GAAK,GAAK,MAVjC,EAanBI,mBAAqB,SAACX,GAClB,IAAIY,EAAa,GAEjBZ,EAAKpB,SAAQ,SAAAC,GACT,IAAIgC,EAAe,GACnBhC,EAAQgC,aAAalC,MAAM,KAAKC,SAAQ,SAACkC,EAAQC,GAC7CF,EAAaG,KACT,wCACUD,EAAQ,EADlB,MACwBD,SAKhCF,EAAWI,KACP,cAAC,EAAD,CAA0BpF,UAAU,kCAAkCkD,aAAc,CAAEmC,WAAY,OAAQC,YAAa,OAAQlE,MAAO,MAAOoC,aAAc,OAAQ1C,QAAS,OAAQ2C,cAAe,UAAnM,SACI,gCACI,qBAAKlD,UAAWJ,IAAOoF,aAAvB,SACI,qBAAKhF,UAAWJ,IAAOqF,cAAvB,SACKvC,EAAQwC,aAGjB,sBAAKlF,UAAWJ,IAAOoF,aAAvB,UACI,uCAGA,8BACK,EAAKd,OAAOxB,EAAQyC,kBAG7B,sBAAKnF,UAAWJ,IAAOoF,aAAvB,UACI,uCAGA,8BACKtC,EAAQ0C,SAGjB,qBAAKpF,UAAWJ,IAAOyF,eAAvB,SACKX,QAxBFhC,EAAQW,WA+B3B,EAAK7B,SAAS,CACViD,WAAYA,KAxDhB,EAAKlF,MAAQ,CACTkF,WAAY,MAJD,E,qDA+DnB,WDiFmB,IAACrB,IChFDnD,KAAKuE,mBDiFxBjB,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,6CACN,CACID,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,W,oBC1FjB,WACI,OACI,sBAAK7D,UAAWJ,IAAO0F,OAAvB,UACI,qBAAKtF,UAAWJ,IAAO2F,iBAAvB,qBACCtF,KAAKV,MAAMkF,kB,GAzEH/D,IAAMC,W,0HCu8BhB6E,G,kDA77BX,WAAYlG,GAAQ,IAAD,8BACf,cAAMA,IAuFVmG,aAAe,SAACC,EAAOC,GACnB,EAAKnE,SAAL,eACKmE,EAAWD,EAAME,OAAOC,SA1Fd,EA8FnBC,aAAe,SAACJ,EAAOK,GACnB,IAAIC,EAAM,YAAO,EAAKzG,MAAMyG,QAE5BA,EAAOD,GAAYE,YAAcP,EAAME,OAAOC,MAE9C,EAAKrE,SAAS,CACVwE,OAAO,YAAKA,MApGD,EAwGnBE,iBAAmB,SAACL,EAAOE,GACvB,IAAID,EAAY,YAAO,EAAKvG,MAAMuG,cAE9BE,EAAM,YAAO,EAAKzG,MAAMyG,QAE5BA,EAAOD,GAAYI,UAAYN,EAAMA,MAErC,EAAKrE,SAAS,CACVwE,OAAO,YAAKA,GACZF,aAAcA,KAjHH,EAqHnBM,YAAc,WACV,IAAIN,EAAY,YAAO,EAAKvG,MAAMuG,cAC9BO,EAAW,EAAK9G,MAAMuG,aAAaQ,OAAS,EAChDR,EAAajB,KACT,gCACI,cAAC0B,EAAA,EAAD,CACIC,WAAS,EACTC,MAAO,QAAUJ,EACjB/F,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKI,aAAaJ,EAAOW,EAAW,MAE7D,cAACO,EAAA,EAAD,CACID,SAAU,SAACjB,EAAOG,GAAR,OAAkB,EAAKK,iBAAiBL,EAAOQ,EAAW,IACpEQ,eAAa,EACbC,GAAG,OACHC,QACI,CACI,CACIN,MAAO,OACPZ,MAAO,QAEX,CACIY,MAAO,SACPZ,MAAO,UAEX,CACIY,MAAO,OACPZ,MAAO,SAInBmB,YAAa,SAACC,GAAD,OAAY,cAACV,EAAA,EAAD,2BAAeU,GAAf,IAAuBR,MAAO,QAAWJ,EAAY,gBA5B5EA,IAiCd,EAAK7E,SACD,CACIsE,aAAcA,EACdE,OAAO,GAAD,mBACC,EAAKzG,MAAMyG,QADZ,CAEF,CACIC,YAAa,GACbE,UAAW,SAjKZ,EAwKnBe,aAAe,SAACxB,GACZ,EAAKlE,SAAS,CACV2F,QAASzB,EAAME,OAAOC,SA1KX,EA8KnBuB,aAAe,SAAC1B,GACZ,EAAKlE,SAAS,CACV6F,QAAS3B,EAAME,OAAOC,SAhLX,EAoLnByB,eAAiB,SAACzB,GACd,EAAKrE,SAAS,CACV+F,YAAa1B,KAtLF,EA0LnB2B,0BAA4B,SAAC3D,GACzB,IASI4D,EACAC,EAVAC,EAAY,GAEhB9D,EAAKpB,SAAQ,SAAAC,GACTiF,EAAU9C,KACN,eAAC+C,EAAA,EAAD,CAA+B/B,MAAOnD,EAAQiC,OAAOkD,WAAa,IAAMnF,EAAQoF,QAAhF,UAA0FpF,EAAQiC,OAAOkD,WAAzG,KAAuHnF,EAAQoF,QAA/H,MAAepF,EAAQiC,YAQN,IAArBgD,EAAUrB,QACVmB,EAAa,GACbC,GAAgB,IAEhBD,EAAa5D,EAAK,GAAGc,OAAOkD,WAAa,IAAMhE,EAAK,GAAGiE,QACvDJ,GAAgB,GAGpB,EAAKlG,SAAS,CACVmG,UAAWA,EACXF,WAAYA,EACZC,cAAeA,EACfK,eAAgBlE,EAAKyC,OAAS,KAnNnB,EAuNnB0B,aAAe,SAACtC,GFjKM,IAACtC,EAAU6E,EEkK7B,EAAKzG,SAAS,CACV0G,WAAYxC,EAAME,OAAOC,QFnKVzC,EEsKD,EAAKoE,0BFtKMS,EEsKqBvC,EAAME,OAAOC,MFrKnEtC,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,8CAAgDuE,EACtD,CACIxE,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,UEnEE,EA+NnBsE,aAAe,SAACzC,GACZ,EAAKlE,SAAS,CACViG,WAAY/B,EAAME,OAAOC,SAjOd,EAqOnBuC,gBAAkB,WACd,EAAK5G,SAAS,CACV8D,QAAQ,KAvOG,EA2OnB+C,iBAAmB,WACf,EAAK7G,SAAS,CACV8D,QAAQ,EACRU,OACI,CACI,CACI,YAAe,GACf,UAAa,KAGzB3C,MAAO,GACPiF,SAAU,GACVC,YAAa,GACbC,QAAS,GACTrD,YAAa,GACbC,IAAK,IACLU,aAAc,CACV,gCACI,cAACS,EAAA,EAAD,CACIC,WAAS,EACTC,MAAO,SACPnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKI,aAAaJ,EAAO,MAElD,cAACkB,EAAA,EAAD,CACID,SAAU,SAACjB,EAAOG,GAAR,OAAkB,EAAKK,iBAAiBL,EAAO,IACzDgB,eAAa,EACbC,GAAG,OACHC,QACI,CACI,CACIN,MAAO,OACPZ,MAAO,QAEX,CACIY,MAAO,SACPZ,MAAO,UAEX,CACIY,MAAO,OACPZ,MAAO,SAInBmB,YAAa,SAACC,GAAD,OAAY,cAACV,EAAA,EAAD,2BAAeU,GAAf,IAAuBR,MAAO,sBA5BrD,OA5PH,EA+RnBgC,eAAiB,WACb,EAAKjH,SAAS,CACVkH,OAAO,KAjSI,EAqSnBC,gBAAkB,WACd,EAAKnH,SAAS,CACVkH,OAAO,EACPvB,QAAS,GACTE,QAAS,GACTuB,UAAW,GACXV,WAAY,GACZT,WAAY,GACZF,YAAa,GACbsB,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,MAnTF,EAwTnBC,eAAiB,WACb,EAAK3H,SAAS,CACV4H,OAAO,KA1TI,EA8TnBC,gBAAkB,WACd,EAAK7H,SAAS,CACV4H,OAAO,EACPlB,WAAY,GACZT,WAAY,GACZF,YAAa,MAnUF,EAuUnB+B,eAAiB,WACb,EAAK9H,SAAS,CACV+H,OAAO,KAzUI,EA6UnBC,gBAAkB,WACd,EAAKhI,SAAS,CACV+H,OAAO,KA/UI,EAmVnBE,kBAAoB,SAAC5F,GACjB,IAAI6F,EAAY,GAEhB7F,EAAKpB,SAAQ,SAAAC,GACTgH,EAAU7E,KACN,eAAC+C,EAAA,EAAD,CAA6B/B,MAAOnD,EAAQiH,KAA5C,UAAmDjH,EAAQiH,KAA3D,KAAmEjH,EAAQkH,QAA3E,MAAelH,EAAQiH,UAI/B,EAAKnI,SAAS,CACVqI,WAAYH,KA7VD,EAiWnBI,yBAA2B,SAACjG,GACxB,IAAIkG,EAAa,GAGjBlG,EAAKpB,SAAQ,SAAAC,GACTqH,EAAWlF,KACP,eAAC+C,EAAA,EAAD,CAA8B/B,MAAOnD,EAAQW,MAA7C,UAAqDX,EAAQW,MAA7D,MAAuEX,EAAQ8F,UAAhE9F,EAAQW,WAI/B,EAAK7B,SAAS,CACVwI,YAAaD,IAGjBjG,EAAU,EAAK2F,oBA/WA,EAkXnBQ,wBAA0B,WACtBC,MAAM,uBAEN,EAAK1I,SAAS,CACVwE,OACI,CACI,CACI,YAAe,GACf,UAAa,KAGzB3C,MAAO,GACPiF,SAAU,GACVC,YAAa,GACbC,QAAS,GACTrD,YAAa,GACbC,IAAK,IACLE,QAAQ,EACRQ,aAAc,CACV,gCACI,cAACS,EAAA,EAAD,CACIC,WAAS,EACTC,MAAO,SACPnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKI,aAAaJ,EAAO,MAElD,cAACkB,EAAA,EAAD,CACID,SAAU,SAACjB,EAAOG,GAAR,OAAkB,EAAKK,iBAAiBL,EAAO,IACzDgB,eAAa,EACbC,GAAG,OACHC,QACI,CACI,CACIN,MAAO,OACPZ,MAAO,QAEX,CACIY,MAAO,SACPZ,MAAO,UAEX,CACIY,MAAO,OACPZ,MAAO,SAInBmB,YAAa,SAACC,GAAD,OAAY,cAACV,EAAA,EAAD,2BAAeU,GAAf,IAAuBR,MAAO,sBA5BrD,OArYH,EAwanB0D,sBAAwB,WACpBD,MAAM,sBAEN,EAAK1I,SAAS,CACV2F,QAAS,GACTE,QAAS,GACTuB,UAAW,GACXV,WAAY,GACZT,WAAY,GACZF,YAAa,GACbsB,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbR,OAAO,KAxbI,EA4bnB0B,eAAiB,WACb,IAAIhB,EAAQ,EAAK7J,MAAMkI,WAAWjF,MAAM,KACpC6H,EAAY,GAEZ,EAAK9K,MAAMsJ,aAAe,EAAKtJ,MAAMuJ,YACrCuB,EAAUxF,KACN,CACI,UAAa,EACb,QAAWyF,SAAS,EAAK/K,MAAMsJ,aAC/B,QAAWyB,SAAS,EAAK/K,MAAMuJ,eAIvCoB,MAAM,+BAGN,EAAK3K,MAAMwJ,aAAe,EAAKxJ,MAAMyJ,aACrCqB,EAAUxF,KACN,CACI,UAAa,EACb,QAAWyF,SAAS,EAAK/K,MAAMwJ,aAC/B,QAAWuB,SAAS,EAAK/K,MAAMyJ,eAKvC,EAAKzJ,MAAM0J,aAAe,EAAK1J,MAAM2J,aACrCmB,EAAUxF,KACN,CACI,UAAa,EACb,QAAWyF,SAAS,EAAK/K,MAAM0J,aAC/B,QAAWqB,SAAS,EAAK/K,MAAM2J,eAM3C,IF1YgB9F,EAAU7D,EE0YtBgL,EACJ,CACI,QAAW,EAAKhL,MAAM4H,QACtB,QAAW,EAAK5H,MAAM8H,QACtB,WAAc,EAAK9H,MAAMqJ,UACzB,MAAS,CACL,OAAUQ,EAAM,GAChB,QAAWA,EAAM,GACjB,MAAS,CACL,KAAQ,EAAK7J,MAAM2I,aAG3B,IAAOmC,GFtZKjH,EEyZD,EAAK+G,sBFzZM5K,EEyZiBgL,EFxZ/ChH,IAAMiH,KAAK,+CAAX,eAEWjL,GACJ,CACHkE,QAAS,CACL,8BAA+B,OAEpCE,MAAK,SAACC,GACLR,EAASQ,EAAIC,SACd4G,OAAM,SAACC,GACNR,MAAMQ,EAAMC,SAAS9G,UElGN,EAmfnB+G,gBAAkB,WACd,IAAIC,EAAmB,GAEQ,KAA3B,EAAKtL,MAAMgJ,cACXsC,EAAmB,EAAKtL,MAAMgJ,YAAY/F,MAAM,MAGpD,IAAIsI,EAAc,EAAKvL,MAAMyG,OAE2B,KAApD8E,EAAYA,EAAYxE,OAAS,GAAGL,aACpC6E,EAAYC,MAEhB,IFxbc3H,EAAU7D,EEwbpBgL,EACJ,CACI,MAAS,EAAKhL,MAAM8D,MACpB,SAAY,EAAK9D,MAAM+I,SACvB,YAAeuC,EACf,QAAW,EAAKtL,MAAMiJ,QACtB,YAAe,EAAKjJ,MAAM4F,YAC1B,IAAO,IACP,OAAU2F,GAGa,IAAvBA,EAAYxE,QACZ,EAAK9E,SAAS,CACVwE,OACI,CACI,CACI,YAAe,GACf,UAAa,OFzcnB5C,EE+cD,EAAK6G,wBF/cM1K,EE+cmBgL,EF9c/ChH,IAAMiH,KAAK,2CAAX,eAEWjL,GACJ,CACHkE,QAAS,CACL,8BAA+B,OAGrCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,SACd4G,OAAM,SAACC,GACNR,MAAMQ,EAAMC,SAAS9G,UEnFN,EAyhBnBmH,uBAAyB,WACrBd,MAAM,sBAEN,EAAK1I,SAAS,CACVyJ,SAAU,GACVC,gBAAiB,GACjB3B,OAAO,IAGXzF,EAAU,EAAK2F,oBAliBA,EAqiBnB0B,eAAiB,WACb,IF/agB/H,EAAU7D,EE+atB6L,EAAc,CACd,KAAQ,EAAK7L,MAAM0L,SACnB,QAAW,EAAK1L,MAAM2L,iBFjbV9H,EEobD,EAAK4H,uBFpbMzL,EEobkB6L,EFnbhD7H,IAAMiH,KAAK,0CAAX,eAEWjL,GAEP,CACIkE,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,SACd4G,OAAM,SAACC,GACNR,MAAMQ,EAAMC,SAAS9G,UEpIN,EA8iBnBwH,uBAAyB,WACrBnB,MAAM,sBAEN,EAAK1I,SAAS,CACVuG,eAAgB,EAChBuD,gBAAiB,GACjBpD,WAAY,GACZT,WAAY,GACZF,YAAa,GACb6B,OAAO,KAvjBI,EA2jBnBmC,eAAiB,WACb,IFtdgBnI,EAAU7D,EEsdtB6L,EAAc,CACd,OAAU,EAAK7L,MAAMwI,eACrB,QAAW,EAAKxI,MAAM+L,gBACtB,MAAS,CACL,KAAQ,EAAK/L,MAAM2I,aF1dX9E,EE8dD,EAAKiI,uBF9dM9L,EE8dkB6L,EF7dhD7H,IAAMiH,KAAK,0CAAX,eAEWjL,GAEP,CACIkE,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,SACd4G,OAAM,SAACC,GACNR,MAAMQ,EAAMC,SAAS9G,UEnHN,EAukBnB2H,uBAAyB,SAAC9F,GACtB,EAAKlE,SAAS,CACV8J,gBAAiB5F,EAAME,OAAOC,SAtkBlC,EAAKtG,MAAQ,CACT+F,QAAQ,EACRoD,OAAO,EACPU,OAAO,EACPG,OAAO,EAEPzD,aAAc,CACV,gCACI,cAACS,EAAA,EAAD,CACIC,WAAS,EACTC,MAAO,SACPnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKI,aAAaJ,EAAO,MAElD,cAACkB,EAAA,EAAD,CACID,SAAU,SAACjB,EAAOG,GAAR,OAAkB,EAAKK,iBAAiBL,EAAO,IACzDgB,eAAa,EACbC,GAAG,OACHC,QACI,CACI,CACIN,MAAO,OACPZ,MAAO,QAEX,CACIY,MAAO,SACPZ,MAAO,UAEX,CACIY,MAAO,OACPZ,MAAO,SAInBmB,YAAa,SAACC,GAAD,OAAY,cAACV,EAAA,EAAD,2BAAeU,GAAf,IAAuBR,MAAO,sBA5BrD,IAiCdpD,MAAO,GACPiF,SAAU,GACVC,YAAa,GACbC,QAAS,GACTrD,YAAa,GACba,OAAQ,CACJ,CACIC,YAAa,GACbE,UAAW,KAInB6D,YAAa,GAEb7C,QAAS,GACTE,QAAS,GACTuB,UAAW,GACXV,WAAY,GACZT,WAAY,GACZF,YAAa,GACbsB,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,YAAa,GAGbuC,WAAY,EAEZR,SAAU,GACVC,gBAAiB,GAGjBrB,WAAY,GACZlC,UAAW,GAGX2D,gBAAiB,QACjBvD,eAAgB,EAEhBL,eAAe,GApFJ,E,qDA6kBnB,WFzjBqB,IAACtE,IE0jBDnD,KAAK6J,yBFzjB1BvG,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,+CACN,CACID,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,W,oBEijBjB,WAAU,IAAD,OACL,OACI,sBAAK7D,UAAWJ,IAAO8L,MAAvB,UACI,sBAAK1L,UAAWJ,IAAO+L,cAAvB,UACI,cAAC,IAAD,CAAMC,GAAI,CAAE/K,MAAO,QAASgL,QAAS,aAArC,SACI,eAACC,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,oBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,8BACA,qBAAKhM,UAAWJ,IAAOqM,gBAAvB,SACI,cAAC,IAAD,CAAQC,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKmI,gBAA1D,yBAMZ,cAAC,IAAD,CAAMwD,GAAI,CAAE/K,MAAO,QAASgL,QAAS,aAArC,SACI,eAACC,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,qBAAKhM,UAAWJ,IAAOqM,gBAAvB,SACI,cAAC,IAAD,CAAQC,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKwI,eAA1D,4BAOhB,sBAAKzI,UAAWJ,IAAO+L,cAAvB,UACI,cAAC,IAAD,CAAMC,GAAI,CAAE/K,MAAO,QAASgL,QAAS,aAArC,SACI,eAACC,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,qBAAKhM,UAAWJ,IAAOqM,gBAAvB,SACI,cAAC,IAAD,CAAQC,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKqJ,eAA1D,yBAMZ,cAAC,IAAD,CAAMsC,GAAI,CAAE/K,MAAO,QAASgL,QAAS,aAArC,SACI,eAACC,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,qBAAKhM,UAAWJ,IAAOqM,gBAAvB,SACI,cAAC,IAAD,CAAQC,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKkJ,eAA1D,4BAOhB,cAACgD,EAAA,EAAD,CACIC,KAAMnM,KAAKV,MAAM+F,OACjB+G,QAASpM,KAAKoI,iBAFlB,SAII,cAAC,IAAD,CAAMuD,GAAI,CACNU,SAAU,WACVzL,MAAO,QACPC,OAAQ,QACR+K,QAAS,YACTU,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAW,QARf,SAUI,eAACZ,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,oBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,8BACA,sBAAKhM,UAAWJ,IAAO+M,eAAvB,UACI,cAACpG,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,QACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,YAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,WACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,eAElD,cAACa,EAAA,EAAD,CACIE,MAAM,eACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,kBAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACR9F,GAAG,WACHL,MAAM,UACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,cAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACR9F,GAAG,WACHL,MAAM,6BACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,kBAElD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,MACNnG,OAAO,SACPoG,MAAM,UACNmG,aAAc,IACdC,KAAK,SACLC,UAAQ,IAEX9M,KAAKV,MAAMuG,gBAEhB,sBAAK9F,UAAWJ,IAAOoN,sBAAvB,UACI,cAAC,IAAD,CAAQd,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKmG,YAA1D,2BAGA,cAAC,IAAD,CAAQ8F,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAK2K,gBAA1D,8BAShB,cAACuB,EAAA,EAAD,CACIC,KAAMnM,KAAKV,MAAMmJ,MACjB2D,QAASpM,KAAK0I,gBAFlB,SAII,cAAC,IAAD,CAAMiD,GAAI,CACNU,SAAU,WACVzL,MAAO,QACPgL,QAAS,YACTU,IAAK,MACLC,KAAM,MACNC,UAAW,yBANf,SAQI,eAACX,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,sBAAKhM,UAAWJ,IAAO+M,eAAvB,UACI,eAACM,EAAA,EAAD,CAAazG,WAAS,EAAtB,UACI,cAAC0G,EAAA,EAAD,CAAYpG,GAAG,UAAf,sBACA,cAACqG,EAAA,EAAD,CAAQC,QAAQ,UAAU3G,MAAM,WAAWZ,MAAO5F,KAAKV,MAAM4H,QAASR,SAAU1G,KAAKiH,aAArF,SACKjH,KAAKV,MAAMyK,iBAGpB,qBAAK9J,MAAO,CAAEmN,cAAe,UAC7B,eAACJ,EAAA,EAAD,CAAazG,WAAS,EAAtB,UACI,cAAC0G,EAAA,EAAD,CAAYpG,GAAG,UAAf,sBACA,cAACqG,EAAA,EAAD,CAAyBC,QAAQ,UAAU3G,MAAM,WAAWZ,MAAO5F,KAAKV,MAAM8H,QAASV,SAAU1G,KAAKmH,aAAtG,SACKnH,KAAKV,MAAMyK,aADJ,iBAKhB,cAACzD,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,4BACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,gBAElD,qBAAKxF,MAAO,CAAEmN,cAAe,UAE7B,eAACJ,EAAA,EAAD,CAAazG,WAAS,EAAtB,UACI,cAAC0G,EAAA,EAAD,CAAYpG,GAAG,QAAf,6BACA,cAACqG,EAAA,EAAD,CAAQC,QAAQ,QAAQ3G,MAAM,kBAAkBZ,MAAO5F,KAAKV,MAAM2I,WAAYvB,SAAU1G,KAAK+H,aAA7F,SACK/H,KAAKV,MAAMsK,gBAGpB,qBAAK3J,MAAO,CAAEmN,cAAe,UAC7B,eAACJ,EAAA,EAAD,CAAazG,WAAS,EAACuG,SAAU9M,KAAKV,MAAMmI,cAA5C,UACI,cAACwF,EAAA,EAAD,CAAYpG,GAAG,QAAf,SAAwB7G,KAAKV,MAAMmI,cAAgB,yBAA2B,yBAC9E,cAACyF,EAAA,EAAD,CAAQC,QAAQ,QAAQ3G,MAAOxG,KAAKV,MAAMmI,cAAgB,yBAA2B,uBAAwB7B,MAAO5F,KAAKV,MAAMkI,WAAYd,SAAU1G,KAAKkI,aAA1J,SACKlI,KAAKV,MAAMoI,eAKpB,sBAAK3H,UAAWJ,IAAO0N,kBAAvB,UACI,sBAAKtN,UAAWJ,IAAO2N,iBAAvB,UACI,qBAAKvN,UAAWJ,IAAO4N,UAAvB,mBACA,cAACjH,EAAA,EAAD,CACIqG,UAAQ,EACRpG,WAAS,EACTC,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,kBAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACRpG,WAAS,EACTC,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,qBAGtD,sBAAK1F,UAAWJ,IAAO2N,iBAAvB,UACI,qBAAKvN,UAAWJ,IAAO4N,UAAvB,mBACA,cAACjH,EAAA,EAAD,CACIqG,UAAQ,EACRpG,WAAS,EACTC,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,kBAGlD,cAACa,EAAA,EAAD,CACIC,WAAS,EACToG,UAAQ,EACRnG,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,qBAGtD,sBAAK1F,UAAWJ,IAAO2N,iBAAvB,UACI,qBAAKvN,UAAWJ,IAAO4N,UAAvB,mBACA,cAACjH,EAAA,EAAD,CACIqG,UAAQ,EACRpG,WAAS,EACTC,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,kBAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACRpG,WAAS,EACTC,MAAM,iBACNnG,OAAO,SACPoG,MAAM,UACNoG,KAAK,SACLnG,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,2BAK9D,qBAAK1F,UAAWJ,IAAO6N,sBAAvB,SACI,cAAC,IAAD,CAAQvB,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKmK,eAA1D,6BAWhB,cAAC+B,EAAA,EAAD,CACIC,KAAMnM,KAAKV,MAAMgK,MACjB8C,QAASpM,KAAKuJ,gBAFlB,SAII,cAAC,IAAD,CAAMoC,GAAI,CACNU,SAAU,WACVzL,MAAO,QACPgL,QAAS,YACTU,IAAK,MACLC,KAAM,MACNC,UAAW,yBANf,SAQI,eAACX,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,sBAAKhM,UAAWJ,IAAO+M,eAAvB,UACI,cAACpG,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,OACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,eAGlD,cAACa,EAAA,EAAD,CACIqG,UAAQ,EACRnG,MAAM,UACNnG,OAAO,SACPoG,MAAM,UACNC,SAAU,SAACjB,GAAD,OAAW,EAAKD,aAAaC,EAAO,yBAGtD,qBAAK1F,UAAWJ,IAAO6N,sBAAvB,SACI,cAAC,IAAD,CAAQvB,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKkL,eAA1D,6BAgBhB,cAACgB,EAAA,EAAD,CACIC,KAAMnM,KAAKV,MAAM6J,MACjBiD,QAASpM,KAAKoJ,gBAFlB,SAII,cAAC,IAAD,CAAMuC,GAAI,CACNU,SAAU,WACVzL,MAAO,QACPgL,QAAS,YACTU,IAAK,MACLC,KAAM,MACNC,UAAW,yBANf,SAQI,eAACX,EAAA,EAAD,WACI,qBAAK9L,UAAWJ,IAAOmM,aAAvB,mBACA,qBAAK/L,UAAWJ,IAAOoM,UAAvB,6BACA,sBAAKhM,UAAWJ,IAAO+M,eAAvB,UACI,qDAAwB1M,KAAKV,MAAMwI,kBACnC,qBAAK7H,MAAO,CAAEmN,cAAe,SAC7B,eAACJ,EAAA,EAAD,CAAazG,WAAS,EAAtB,UACI,cAAC0G,EAAA,EAAD,CAAYpG,GAAG,QAAf,6BACA,cAACqG,EAAA,EAAD,CAAQC,QAAQ,QAAQ3G,MAAM,kBAAkBZ,MAAO5F,KAAKV,MAAM2I,WAAYvB,SAAU1G,KAAK+H,aAA7F,SACK/H,KAAKV,MAAMsK,gBAGpB,qBAAK3J,MAAO,CAAEmN,cAAe,UAC7B,eAACJ,EAAA,EAAD,CAAazG,WAAS,EAAtB,UACI,cAAC0G,EAAA,EAAD,CAAYpG,GAAG,gBAAf,2BACA,eAACqG,EAAA,EAAD,CAAQC,QAAQ,gBAAgB3G,MAAM,gBAAgBZ,MAAO5F,KAAKV,MAAM+L,gBAAiB3E,SAAU1G,KAAKuL,uBAAxG,UACI,cAAC5D,EAAA,EAAD,CAAU/B,MAAM,QAAhB,mBACA,cAAC+B,EAAA,EAAD,CAAU/B,MAAM,OAAhB,kBACA,cAAC+B,EAAA,EAAD,CAAU/B,MAAM,YAAhB,gCAIZ,qBAAK7F,UAAWJ,IAAO6N,sBAAvB,SACI,cAAC,IAAD,CAAQvB,QAAQ,YAAYxF,MAAM,UAAUvG,QAASF,KAAKsL,eAA1D,oC,GAl7BR7K,IAAMC,W,gFCkMf+M,G,kDA/LX,WAAYpO,GAAQ,IAAD,8BACf,cAAMA,IAaVqO,kBAAoB,SAAC9H,GACjB,IAQI+H,EARAC,EAAe,EAAKtO,MAAMuO,cAAcC,QAAQlI,GAChDmI,EAAU,YAAO,EAAKzO,MAAMuO,gBAEV,IAAlBD,EACAG,EAAWnJ,KAAKgB,GAEhBmI,EAAWC,OAAOJ,EAAc,GAIhCD,EADsB,IAAtBI,EAAW1H,OACA,GAEA,SAAW0H,EAAWE,OAAS,IAG9C,EAAK1M,SAAS,CACVsM,cAAc,YAAKE,GACnBG,WAAYP,IAGhB7J,EAAkB,EAAKqK,0BAA2BR,EAAW,EAAKrO,MAAM8O,eAnCzD,EAsCnBC,oBAAsB,SAACzI,GACnB,IASI+H,EATAC,EAAe,EAAKtO,MAAMgP,gBAAgBR,QAAQlI,GAClDmI,EAAU,YAAO,EAAKzO,MAAMgP,kBAEV,IAAlBV,EACAG,EAAWnJ,KAAKgB,GAEhBmI,EAAWC,OAAOJ,EAAc,GAKhCD,EADsB,IAAtBI,EAAW1H,OACA,GAEA,WAAa0H,EAAWE,OAAOM,oBAAsB,IAGpE,EAAKhN,SAAS,CACV+M,gBAAgB,YAAKP,GACrBK,aAAcT,IAGlB7J,EAAkB,EAAKqK,0BAA2B,EAAK7O,MAAM4O,WAAaP,IA5D3D,EA+DnBnE,kBAAoB,SAAC5F,GACjB,IAAI4K,EAAS,GAEb5K,EAAKpB,SAAQ,SAAAC,GACT+L,EAAO5J,KACHnC,EAAQiH,SAIhB,EAAKnI,SAAS,CACViN,OAAQA,KAzEG,EA6EnBL,0BAA4B,SAACvK,GAEzB,IADA,IAAI6K,EAAY,GACPC,EAAI,EAAGA,EAAI9K,EAAKyC,OAAQqI,GAAK,EAClCC,QAAQC,IAAIhL,EAAK8K,IACjBC,QAAQC,IAAIhL,EAAK8K,EAAI,IACrBD,EAAU7J,KACN,eAAC,EAAD,CAAcpF,UAAU,kCAAkCkD,aAAc,CAAEmC,WAAY,OAAQC,YAAa,OAAQlE,MAAO,MAAOoC,aAAc,OAAQ1C,QAAS,OAAQ2C,cAAe,UAAvL,UACI,gCACI,sBAAKlD,UAAWJ,KAAOkP,WAAvB,UACI,4CAAejL,EAAK8K,GAAG1G,aACvB,8BAAMpE,EAAK8K,GAAGI,kBAElB,sBAAK/O,UAAWJ,KAAOoP,YAAvB,UACI,0CAAanL,EAAK8K,GAAGM,eACrB,yCAAYpL,EAAK8K,GAAG7G,cAExB,sBAAK9H,UAAWJ,KAAOsP,YAAvB,UACI,gCACI,sBAAKlP,UAAW6D,EAAK8K,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOuP,OAASvP,KAAOwP,MAA1E,UAAkFvL,EAAK8K,GAAGvJ,IAAI,qBAAKpF,UAAW6D,EAAK8K,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOyP,QAAUzP,KAAO0P,eACzK,qBAAKtP,UAAW6D,EAAK8K,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOuP,OAASvP,KAAOwP,MAA1E,SAAkFvL,EAAK8K,GAAGzJ,cAG9F,qBAAKlF,UAAWJ,KAAO2P,OAAvB,gBACA,gCACI,sBAAKvP,UAAW6D,EAAK8K,EAAI,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOuP,OAASvP,KAAOwP,MAA9E,UAAsFvL,EAAK8K,EAAI,GAAGvJ,IAAI,qBAAKpF,UAAW6D,EAAK8K,EAAI,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOyP,QAAUzP,KAAO0P,eACrL,qBAAKtP,UAAW6D,EAAK8K,EAAI,GAAGtL,QAAUQ,EAAK8K,GAAGQ,OAASvP,KAAOuP,OAASvP,KAAOwP,MAA9E,SAAsFvL,EAAK8K,EAAI,GAAGzJ,oBAI9G,qBAAKlF,UAAWJ,KAAOqM,gBAAvB,SACI,cAAC,IAAD,CAAQjM,UAAWJ,KAAO4P,cAA1B,SACI,cAAC,IAAD,CAAMxP,UAAWJ,KAAO6P,aAActN,GAAI,UAAY0B,EAAK8K,GAAG7H,GAA9D,oCAzBD6H,IAkCnB,EAAKnN,SAAS,CACVkN,UAAWA,IAGf5K,EAAU,EAAK2F,oBAtHf,EAAKlK,MAAQ,CACTmP,UAAW,KACXD,OAAQ,GACRX,cAAe,GACfhG,QAAS,CAAC,QAAS,OAAQ,aAC3ByG,gBAAiB,GACjBJ,WAAY,GACZE,aAAc,IAVH,E,qDA4HnB,WACItK,EAAkB9D,KAAKmO,0BAA2B,M,oBAGtD,WAAU,IAAD,OACL,OACI,sBAAKpO,UAAWJ,KAAO8I,MAAvB,UACI,qBAAK1I,UAAWJ,KAAO8P,gBAAvB,qBACA,sBAAK1P,UAAWJ,KAAO+P,YAAvB,UACI,cAACC,GAAA,EAAD,CAAMhE,GAAI,CAAE/K,MAAO,QAASgP,SAAU,IAAKC,QAAS,oBAApD,SACK7P,KAAKV,MAAMkP,OAAOsB,KAAI,SAAClK,GACpB,IAAMuH,EAAO,8BAA0BvH,GAEvC,OACI,cAACmK,GAAA,EAAD,CAEIC,gBAAc,EAFlB,SAII,eAACC,GAAA,EAAD,CAAgBC,UAAMC,EAAWjQ,QAAS,kBAAM,EAAKwN,kBAAkB9H,IAAQwK,OAAK,EAApF,UACI,cAACC,GAAA,EAAD,CAAcxJ,GAAIsG,EAASmD,QAAS1K,IACpC,cAAC2K,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIC,KAAK,QACLC,SAAsD,IAA7C,EAAKpR,MAAMuO,cAAcC,QAAQlI,GAC1C+K,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmB1D,WAXxCvH,QAmBrB,cAAC+J,GAAA,EAAD,CAAMhE,GAAI,CAAE/K,MAAO,OAAQgP,SAAU,IAAKC,QAAS,oBAAnD,SACK7P,KAAKV,MAAMuI,QAAQiI,KAAI,SAAClK,GACrB,IAAMuH,EAAO,8BAA0BvH,GAEvC,OACI,cAACmK,GAAA,EAAD,CAEIC,gBAAc,EAFlB,SAII,eAACC,GAAA,EAAD,CAAgBC,UAAMC,EAAWjQ,QAAS,kBAAM,EAAKmO,oBAAoBzI,IAAQwK,OAAK,EAAtF,UACI,cAACC,GAAA,EAAD,CAAcxJ,GAAIsG,EAASmD,QAAS1K,IACpC,cAAC2K,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CACIC,KAAK,QACLC,SAAwD,IAA/C,EAAKpR,MAAMgP,gBAAgBR,QAAQlI,GAC5C+K,UAAW,EACXC,eAAa,EACbC,WAAY,CAAE,kBAAmB1D,WAXxCvH,WAoBxB5F,KAAKV,MAAMmP,iB,GA1LJhO,IAAMC,WC+HfoQ,G,kDAvIX,WAAYzR,GAAQ,IAAD,8BACf,cAAMA,IAuCV0R,oBAAsB,SAACnN,EAAMP,GACZ,IAATA,EACA,EAAK9B,SAAS,CACVyP,OAAQpN,EAAKqB,SACbgM,UAAWrN,EAAKuB,MAEJ,IAAT9B,GACP,EAAK9B,SAAS,CACV2P,OAAQtN,EAAKqB,SACbkM,UAAWvN,EAAKuB,OAjDT,EAsDnBiM,mBAAqB,SAACxN,GAClB+K,QAAQC,IAAIhL,GACZV,EAAY,EAAK6N,oBAAqBnN,EAAK,GAAGyN,QAAS,GACvDnO,EAAY,EAAK6N,oBAAqBnN,EAAK,GAAG0N,QAAS,GAGvD,IAAIC,EAAK,EACLC,EAAK,EAELC,EAAS,GAEb7N,EAAK,GAAG8N,IAAIlP,SAAQ,SAAAC,GACZA,EAAQkP,QAAUlP,EAAQmP,QAC1BL,IAEAC,IAEJC,EAAO7M,KACH,sBAAK7E,UAAWJ,KAAOkS,aAAvB,UACI,sBAAK9R,UAAWJ,KAAO4N,UAAvB,iBACS9K,EAAQqP,aAEjB,sBAAK/R,UAAWJ,KAAOoS,gBAAvB,UACI,8BAAMtP,EAAQkP,UACd,8BAAMlP,EAAQmP,oBAM9B,EAAKrQ,SAAS,CACV4H,MAAOvF,EAAK,GAAGuF,MACf6I,WAAYpO,EAAK,GAAGoO,WACpBN,IAAK9N,EAAK,GAAG8N,IACbxC,OAAQqC,EAAKC,EAAK,EAAI,EACtBC,OAAQA,KAtFZ,EAAKnS,MAAQ,CACTmP,UAAW,GACXuC,OAAQ,GACRC,UAAW,GACXC,OAAQ,GACRC,UAAW,GACXhI,MAAO,CACHzE,OAAQ,EACRmD,QAAS,GACTyB,MAAO,CACHI,KAAM,KAGdsI,WAAY,GACZN,IACI,CACI,CACI,UAAa,EACb,QAAW,EACX,QAAW,GAEf,CACI,UAAa,EACb,QAAW,EACX,QAAW,GAEf,CACI,UAAa,EACb,QAAW,EACX,QAAW,IAGvBxC,OAAQ,EACRuC,OAAQ,IApCG,E,qDA6FnB,WJpGe,IAACtO,EAAUY,EAAVZ,EIqGDnD,KAAKoR,mBJrGMrN,EIqGc,OAAS/D,KAAKX,MAAMoJ,MAAMzB,OAAOH,GJpGzEvD,IAAMC,SAASC,QAAU,CACrB,gBAAiB,WACjB,OAAU,WACV,QAAW,KAEfF,IAAMG,IAAI,0CAA4CM,EAClD,CACIP,QAAS,CACL,8BAA+B,OAGzCE,MAAK,SAACC,GACJR,EAASQ,EAAIC,W,oBI2FjB,WACI,OACI,qBAAK7D,UAAWJ,KAAO8I,MAAvB,SACI,cAAC,IAAD,CAAMkD,GAAI,CAAE/K,MAAO,MAAOgL,QAAS,WAAYqG,aAAc,OAAQ5R,OAAQ,YAA7E,SACI,eAACwL,EAAA,EAAD,WACI,gCACI,sBAAK9L,UAAWJ,KAAOkP,WAAvB,UACI,4CAAe7O,KAAKV,MAAM6J,MAAMG,MAAMI,QACtC,8BAAM1J,KAAKV,MAAM0S,gBAErB,sBAAKjS,UAAWJ,KAAOoP,YAAvB,UACI,0CAAa/O,KAAKV,MAAM6J,MAAMzE,UAC9B,yCAAY1E,KAAKV,MAAM6J,MAAMtB,cAEjC,sBAAK9H,UAAWJ,KAAOsP,YAAvB,UACI,gCACI,sBAAKlP,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOuP,OAASvP,KAAOwP,MAAjE,UAAyEnP,KAAKV,MAAM2R,UAAU,qBAAKlR,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOyP,QAAUzP,KAAO0P,eAChK,qBAAKtP,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOuP,OAASvP,KAAOwP,MAAjE,SAAyEnP,KAAKV,MAAM0R,YAGxF,qBAAKjR,UAAWJ,KAAO2P,OAAvB,gBACA,gCACI,sBAAKvP,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOuP,OAASvP,KAAOwP,MAAjE,UAAyEnP,KAAKV,MAAM6R,UAAU,qBAAKpR,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOyP,QAAUzP,KAAO0P,eAChK,qBAAKtP,UAAiC,IAAtBC,KAAKV,MAAM4P,OAAevP,KAAOuP,OAASvP,KAAOwP,MAAjE,SAAyEnP,KAAKV,MAAM4R,kBAIhG,qBAAKnR,UAAWJ,KAAOuS,cAAvB,SACKlS,KAAKV,MAAMmS,oB,GA/HVhR,IAAMC,WCG9ByR,G,4JAEJ,WACE,OACE,sBAAKpS,UAAU,SAAf,UACE,cAAC,EAAD,CAAQ+B,SAAU9B,KAAKX,MAAMyC,WAC7B,eAAC,IAAD,WACE,cAAC,IAAD,CAAOsQ,KAAK,SAASC,UAAW9M,KAChC,cAAC,IAAD,CAAO6M,KAAK,aAAaC,UAAWvB,KACpC,cAAC,IAAD,CAAOsB,KAAK,SAASC,UAAW5E,KAChC,cAAC,IAAD,CAAO2E,KAAK,UAAUC,UAAWrO,IACjC,cAAC,IAAD,CAAOoO,KAAK,IAAIE,OAAK,EAACD,UAAW1P,IACjC,cAAC,IAAD,CAAUT,GAAG,gB,GAZLxB,aAmBH6R,eAAWJ,I,OCnB1BK,IAASC,OAGP,cAAC,IAAD,UACE,cAAC,GAAD,MAIAC,SAASC,eAAe,U,mBCjB5BzT,EAAOC,QAAU,CAAC,KAAO,uBAAuB,MAAQ,wBAAwB,SAAW,2BAA2B,aAAe,+BAA+B,KAAO,yB,mBCA3KD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,iBAAmB,qCAAqC,aAAe,iCAAiC,eAAiB,mCAAmC,cAAgB,oC,mBCAlOD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,cAAgB,8BAA8B,cAAgB,8BAA8B,KAAO,uB,mBCArJD,EAAOC,QAAU,CAAC,YAAc,4BAA4B,kBAAoB,kCAAkC,YAAc,+B","file":"static/js/main.ab0e9b38.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardBlack\":\"Card_cardBlack__3pMMG\",\"cardWhite\":\"Card_cardWhite__28zJd\",\"cardTrendingWhite\":\"Card_cardTrendingWhite__iD_se\",\"cardArticleWhite\":\"Card_cardArticleWhite__1hHcO\",\"round\":\"Card_round__3qlPv\",\"article-round\":\"Card_article-round__2MQCb\",\"shadow\":\"Card_shadow__Z02WS\",\"relative\":\"Card_relative__3ZvOO\",\"mainpage\":\"Card_mainpage__2HdEd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"match\":\"MatchPage_match__1aGtb\",\"matchPageHeader\":\"MatchPage_matchPageHeader__2_yol\",\"winner\":\"MatchPage_winner__2Rkqz\",\"matchTitle\":\"MatchPage_matchTitle__1sH6U\",\"courtDetail\":\"MatchPage_courtDetail__1dKE7\",\"userDetails\":\"MatchPage_userDetails__15z2T\",\"plain\":\"MatchPage_plain__Lbfnq\",\"arrowDown\":\"MatchPage_arrowDown__3wLc3\",\"arrowUp\":\"MatchPage_arrowUp__1CyXT\",\"versus\":\"MatchPage_versus__xLUAJ\",\"matchOption\":\"MatchPage_matchOption__2vTYl\",\"linkContainer\":\"MatchPage_linkContainer__RvDDd\",\"matchDetails\":\"MatchPage_matchDetails__3eMCS\",\"buttonContainer\":\"MatchPage_buttonContainer__tgGEW\",\"setsContainer\":\"MatchPage_setsContainer__3FE00\",\"setContainer\":\"MatchPage_setContainer__1FPHw\",\"setHeader\":\"MatchPage_setHeader__3IUqu\",\"scoresContainer\":\"MatchPage_scoresContainer__ytuHm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"admin\":\"AdminPage_admin__3zONG\",\"cardContainer\":\"AdminPage_cardContainer__3wMF6\",\"playerHeader\":\"AdminPage_playerHeader__2G9WB\",\"playerSub\":\"AdminPage_playerSub__1b3jl\",\"buttonContainer\":\"AdminPage_buttonContainer__bn_kO\",\"inputContainer\":\"AdminPage_inputContainer__2PYvd\",\"setScoreContainer\":\"AdminPage_setScoreContainer__3r_Ln\",\"eachSetContainer\":\"AdminPage_eachSetContainer__UD_ra\",\"setHeader\":\"AdminPage_setHeader__3GxAO\",\"playerButtonContainer\":\"AdminPage_playerButtonContainer__2OHhC\",\"createButtonContainer\":\"AdminPage_createButtonContainer__xF0zU\"};","import styles from './Button.module.css';\nimport React from \"react\";\n\n/**\n * Button class is a button component\n * \n * This component contains three states\n * 1. text: will be loacted in the button\n * 2. styleName: can choose one of css options\n *      white\n *      transparent\n * 3. inlineStyle: user can pass an inline css as a props\n * \n * Button Component can hold these props\n * text: name of the button\n * styleName: a css option\n * inlineStyle: inline css\n * onclick: a function\n */\nclass Button extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: this.props.text ? this.props.text : \"BUTTON\",\n            styleName: {},\n            inlineStyle: this.props.inlineStyle ? this.props.inlineStyle : {},\n            textStyle: this.props.textStyle ? this.props.textStyle : {}\n        }\n        switch (this.props.styleName) {\n            case 'white':\n                this.state.styleName = styles.buttonWhite\n                break;\n            case 'transparent':\n                this.state.styleName = styles.buttonTransparent\n                break;\n            default:\n                this.state.styleName = styles.buttonBlack\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className={this.state.styleName} style={this.state.inlineStyle} onClick={this.props.onclick}>\n                {this.props.account ? <img style={{ margin: \"-5px 3px\", display: \"inline-block\"}} src={this.props.account} alt=\"account\" /> : null}\n                <div style={this.state.textStyle}>\n                    {this.state.text}\n                </div>\n            </div >\n        )\n    }\n}\n\nexport default Button","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../Button/Button'\nimport styles from './Header.module.css'\n\nconst mainButton = {\n    width: \"140px\",\n    height: \"50px\",\n    lineHeight: \"50px\"\n}\nconst playerButton = {\n    width: \"100px\",\n    height: \"50px\",\n    lineHeight: \"50px\"\n}\n\nconst headerScrolled = {\n    backgroundColor: \"white\",\n    boxShadow: \"0px 3px 10px rgb(0 0 0 / 20%)\"\n}\n\nclass Header extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scrolled: false,\n            login: false,\n            register: false,\n            searchQuery: \"\",\n        }\n    }\n\n\n    listenScroll = () => {\n        if (window.pageYOffset >= 200) {\n            this.setState({\n                scrolled: true\n            })\n        } else {\n            this.setState({\n                scrolled: false\n            })\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener('scroll', this.listenScroll)\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('scroll', this.listenScroll);\n    }\n\n    render() {\n        return (\n            <div style={this.state.scrolled ? headerScrolled : {}} className={this.props.location.pathname === \"/\" ? styles.header : styles.headerNotMain}>\n\n                <Link to=\"/\" className={styles.link}>\n                    <Button text=\"Tendrews\"\n                        inlineStyle={mainButton}\n                        styleName=\"transparent\"\n                    />\n                </Link>\n                {(this.props.location.pathname !== \"/admin\")\n\n                    ?\n                    <Link to=\"/admin\" className={styles.link}>\n                        <Button text=\"Add\"\n                            inlineStyle={playerButton}\n                            styleName=\"transparent\"\n                        />\n                    </Link>\n                    : null}\n                {(this.props.location.pathname === \"/\" || this.props.location.pathname !== \"/player\")\n                    ?\n                    <Link to=\"/player\" className={styles.link}>\n                        <Button text=\"Player\"\n                            inlineStyle={playerButton}\n                            styleName=\"transparent\"\n                        />\n                    </Link>\n                    : null}\n                {(this.props.location.pathname !== \"/match\")\n\n                    ?\n                    <Link to=\"/match\" className={styles.link}>\n                        <Button text=\"Match\"\n                            inlineStyle={playerButton}\n                            styleName=\"transparent\"\n                        />\n                    </Link>\n                    : null}\n            </div>\n        )\n    }\n}\n\nexport default Header","import styles from './Card.module.css';\r\nimport React from \"react\";\r\n\r\nfunction Card({ ...props }) {\r\n    const {\r\n        children,\r\n    } = props;\r\n\r\n    let result = ``;\r\n\r\n    if (props.styleName) {\r\n        let newArray = props.styleName.split(' ');\r\n\r\n        newArray.forEach(element => {\r\n            result += `${styles[element]} `\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className={result} style={props.inlineStyles}>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","export default __webpack_public_path__ + \"static/media/main.6c9e26d5.jpg\";","import React from \"react\";\nimport Card from '../../../components/Card/Card.jsx'\nimport main from '../../images/main.jpg'\nimport styles from './MainPage.module.css'\n\nclass MainPage extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <img className={styles.image} src={main} alt=\"main\" />\n                <div className={styles.greeting}>\n                    Get updates on the latest Tennis action in one place!\n                </div>\n                <div className={styles.main}>\n                    <div className={styles.latestHeader} />\n\n                    <Card styleName=\"cardWhite round relative shadow\" inlineStyles={{ width: \"100%\", marginBottom: \"40px\", display: \"flex\", flexDirection: \"column\" }} >\n                        <div className={styles.latestHeader}>\n                            In this website you can check all registered players.\n                        </div>\n                        <div className={styles.latestHeader}>\n                            You can check all matches between registered players as well.\n                        </div>\n                        <div className={styles.latestHeader}>\n                            Also you can make a new Player, Match, Veneue and Court.\n                        </div>\n                    </Card>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nexport default MainPage;","import axios from 'axios';\n\nconst getMatches = (callback, query) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/match/search' + query,\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\n\nconst getFullName = (callback, email, user) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/player/get/name?email=' + email,\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data, user);\n    })\n}\n\nconst getSimplePlayers = (callback) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/player/simple/get',\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\nconst getVenues = (callback) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/venue/get',\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\nconst getCourtWithVenue = (callback, venueName) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/court/get?venue=' + venueName,\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\nconst createPlayer = (callback, state) => {\n    axios.post('http://localhost:23204/api/player/create',\n        {\n            ...state\n        }, {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n        }\n    }\n    ).then((res) => {\n        callback(res.data);\n    }).catch((error) => {\n        alert(error.response.data)\n    })\n}\n\nconst createNewMatch = (callback, state) => {\n    axios.post('http://localhost:23204/api/match/full/create',\n        {\n            ...state\n        }, {\n        headers: {\n            'Access-Control-Allow-Origin': '*',\n        }\n    }).then((res) => {\n        callback(res.data)\n    }).catch((error) => {\n        alert(error.response.data)\n    })\n}\n\nconst createNewCourt = (callback, state) => {\n    axios.post('http://localhost:23204/api/court/create',\n        {\n            ...state\n        },\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data)\n    }).catch((error) => {\n        alert(error.response.data)\n    })\n}\n\nconst createNewVenue = (callback, state) => {\n    axios.post('http://localhost:23204/api/venue/create',\n        {\n            ...state\n        },\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data)\n    }).catch((error) => {\n        alert(error.response.data)\n    })\n}\n\nconst getViewPlayers = (callback) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/player/view/get',\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\nconst getMatchWithNames = (callback, query) => {\n    axios.defaults.headers = {\n        'Cache-Control': 'no-cache',\n        'Pragma': 'no-cache',\n        'Expires': '0',\n    };\n    axios.get('http://localhost:23204/api/match/get/withName?' + query,\n\n        {\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n            }\n        }\n    ).then((res) => {\n        callback(res.data);\n    })\n}\n\nexport {\n    getMatches,\n    getFullName,\n    getSimplePlayers,\n    getVenues,\n    getCourtWithVenue,\n\n    createPlayer,\n    createNewMatch,\n    createNewCourt,\n    createNewVenue,\n    getViewPlayers,\n\n    getMatchWithNames\n}\n","import React from \"react\";\n\nimport { getViewPlayers } from \"../../../axios/axios\";\nimport styles from './PlayerPage.module.css'\n\nimport Card from \"../../../components/Card/Card\";\n\nclass PlayerPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            playerPage: null\n        }\n    }\n\n    getAge = (dob) => {\n        let milli = new Date() - new Date(dob)\n        return Math.floor(milli / 1000 / 60 / 60 / 24 / 365);\n    }\n\n    getPlayersCallback = (data) => {\n        let playerPage = []\n\n        data.forEach(element => {\n            let phoneNumbers = []\n            element.phoneNumbers.split(',').forEach((number, index) => {\n                phoneNumbers.push(\n                    <div>\n                        Phone{index + 1} : {number}\n                    </div>\n                )\n            })\n\n            playerPage.push(\n                <Card key={element.email} styleName=\"cardWhite round relative shadow\" inlineStyles={{ marginLeft: \"auto\", marginRight: \"auto\", width: \"65%\", marginBottom: \"50px\", display: \"flex\", flexDirection: \"column\" }}>\n                    <div>\n                        <div className={styles.rowContainer}>\n                            <div className={styles.nameContainer}>\n                                {element.fullName}\n                            </div>\n                        </div>\n                        <div className={styles.rowContainer}>\n                            <div>\n                                age:\n                            </div>\n                            <div>\n                                {this.getAge(element.dateOfBirth)}\n                            </div>\n                        </div>\n                        <div className={styles.rowContainer}>\n                            <div>\n                                ELO:\n                            </div>\n                            <div>\n                                {element.elo}\n                            </div>\n                        </div>\n                        <div className={styles.phoneContainer}>\n                            {phoneNumbers}\n                        </div>\n                    </div>\n                </Card>\n            )\n        });\n\n        this.setState({\n            playerPage: playerPage\n        })\n    }\n\n    componentDidMount() {\n        getViewPlayers(this.getPlayersCallback)\n    }\n\n    render() {\n        return (\n            <div className={styles.player}>\n                <div className={styles.playerPageHeader}>Players</div>\n                {this.state.playerPage}\n            </div>\n        )\n    }\n\n}\n\nexport default PlayerPage;","import { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport { Modal } from \"@mui/material\";\nimport { InputLabel } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport Select from '@mui/material/Select';\n\nimport { Button } from \"@mui/material\";\nimport { TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { getSimplePlayers, getVenues, getCourtWithVenue, createPlayer, createNewMatch, createNewCourt, createNewVenue } from \"../../../axios/axios\";\nimport styles from './AdminPage.module.css'\nimport { MenuItem } from \"@mui/material\";\nimport { Autocomplete } from \"@mui/material\";\n\n\nclass AdminPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            player: false,\n            match: false,\n            court: false,\n            venue: false,\n\n            phoneHandler: [\n                <div key={1}>\n                    <TextField\n                        fullWidth\n                        label={\"phone\" + 1}\n                        margin=\"normal\"\n                        color=\"success\"\n                        onChange={(event) => this.phoneHandler(event, 0)}\n                    />\n                    <Autocomplete\n                        onChange={(event, value) => this.phoneTypeHandler(value, 0)}\n                        disablePortal\n                        id=\"test\"\n                        options={\n                            [\n                                {\n                                    label: \"Home\",\n                                    value: \"home\"\n                                },\n                                {\n                                    label: \"Mobile\",\n                                    value: \"mobile\"\n                                },\n                                {\n                                    label: \"Work\",\n                                    value: \"work\"\n                                },\n                            ]\n                        }\n                        renderInput={(params) => <TextField {...params} label={\"Phone\" + (1) + \" Type\"} />}\n                    />\n                </div>\n            ],\n\n            email: \"\",\n            forename: \"\",\n            middleNames: \"\",\n            surname: \"\",\n            dateOfBirth: \"\",\n            phones: [\n                {\n                    phoneNumber: \"\",\n                    phoneType: \"\",\n                }\n            ],\n\n            playersList: \"\",\n\n            matchP1: \"\",\n            matchP2: \"\",\n            matchDate: \"\",\n            venueValue: \"\",\n            courtValue: \"\",\n            courtSufcae: \"\",\n            set1P1Value: \"\",\n            set1P2Value: \"\",\n            set2P1Value: \"\",\n            set2P2Value: \"\",\n            set3P1Value: \"\",\n            set3P2Value: \"\",\n\n\n            matchIndex: 0,\n\n            addVenue: \"\",\n            addVenueAddress: \"\",\n\n\n            venuesList: \"\",\n            courtList: \"\",\n\n\n            addCourtSurface: \"grass\",\n            newCourtNumber: 0,\n\n            courtDisabled: true,\n        }\n    }\n\n    inputHandler = (event, toChange) => {\n        this.setState({\n            [toChange]: event.target.value\n        })\n    }\n\n    phoneHandler = (event, phoneIndex) => {\n        let phones = [...this.state.phones];\n\n        phones[phoneIndex].phoneNumber = event.target.value;\n\n        this.setState({\n            phones: [...phones]\n        })\n    }\n\n    phoneTypeHandler = (value, phoneIndex) => {\n        let phoneHandler = [...this.state.phoneHandler];\n\n        let phones = [...this.state.phones];\n\n        phones[phoneIndex].phoneType = value.value;\n\n        this.setState({\n            phones: [...phones],\n            phoneHandler: phoneHandler\n        })\n    }\n\n    addNewPhone = () => {\n        let phoneHandler = [...this.state.phoneHandler];\n        let newIndex = this.state.phoneHandler.length + 1;\n        phoneHandler.push(\n            <div key={newIndex}>\n                <TextField\n                    fullWidth\n                    label={\"phone\" + newIndex}\n                    margin=\"normal\"\n                    color=\"success\"\n                    onChange={(event) => this.phoneHandler(event, newIndex - 1)}\n                />\n                <Autocomplete\n                    onChange={(event, value) => this.phoneTypeHandler(value, newIndex - 1)}\n                    disablePortal\n                    id=\"test\"\n                    options={\n                        [\n                            {\n                                label: \"Home\",\n                                value: \"home\"\n                            },\n                            {\n                                label: \"Mobile\",\n                                value: \"mobile\"\n                            },\n                            {\n                                label: \"Work\",\n                                value: \"work\"\n                            },\n                        ]\n                    }\n                    renderInput={(params) => <TextField {...params} label={\"Phone\" + (newIndex) + \" Type\"} />}\n                />\n            </div>\n        )\n\n        this.setState(\n            {\n                phoneHandler: phoneHandler,\n                phones: [\n                    ...this.state.phones,\n                    {\n                        phoneNumber: \"\",\n                        phoneType: \"\"\n                    }\n                ],\n            }\n        )\n    }\n\n    user1Handler = (event) => {\n        this.setState({\n            matchP1: event.target.value\n        })\n    }\n\n    user2Handler = (event) => {\n        this.setState({\n            matchP2: event.target.value\n        })\n    }\n\n    surfaceHandler = (value) => {\n        this.setState({\n            courtSufcae: value\n        })\n    }\n\n    getCourtWithVenueCallback = (data) => {\n        let courtList = []\n\n        data.forEach(element => {\n            courtList.push(\n                <MenuItem key={element.number} value={element.number.toString() + \",\" + element.surface}>{element.number.toString()} ({element.surface})</MenuItem>\n            )\n        })\n\n\n        let courtValue;\n        let courtDisabled;\n\n        if (courtList.length === 0) {\n            courtValue = \"\"\n            courtDisabled = true;\n        } else {\n            courtValue = data[0].number.toString() + \",\" + data[0].surface;\n            courtDisabled = false;\n        }\n\n        this.setState({\n            courtList: courtList,\n            courtValue: courtValue,\n            courtDisabled: courtDisabled,\n            newCourtNumber: data.length + 1\n        })\n    }\n\n    venueHandler = (event) => {\n        this.setState({\n            venueValue: event.target.value\n        })\n\n        getCourtWithVenue(this.getCourtWithVenueCallback, event.target.value)\n    }\n\n    courtHandler = (event) => {\n        this.setState({\n            courtValue: event.target.value\n        })\n    }\n\n    playerModalOpen = () => {\n        this.setState({\n            player: true\n        })\n    }\n\n    playerModalClose = () => {\n        this.setState({\n            player: false,\n            phones:\n                [\n                    {\n                        \"phoneNumber\": \"\",\n                        \"phoneType\": \"\"\n                    }\n                ],\n            email: \"\",\n            forename: \"\",\n            middleNames: \"\",\n            surname: \"\",\n            dateOfBirth: \"\",\n            elo: 1000,\n            phoneHandler: [\n                <div key={1}>\n                    <TextField\n                        fullWidth\n                        label={\"phone\" + 1}\n                        margin=\"normal\"\n                        color=\"success\"\n                        onChange={(event) => this.phoneHandler(event, 0)}\n                    />\n                    <Autocomplete\n                        onChange={(event, value) => this.phoneTypeHandler(value, 0)}\n                        disablePortal\n                        id=\"test\"\n                        options={\n                            [\n                                {\n                                    label: \"Home\",\n                                    value: \"home\"\n                                },\n                                {\n                                    label: \"Mobile\",\n                                    value: \"mobile\"\n                                },\n                                {\n                                    label: \"Work\",\n                                    value: \"work\"\n                                },\n                            ]\n                        }\n                        renderInput={(params) => <TextField {...params} label={\"Phone\" + (1) + \" Type\"} />}\n                    />\n                </div>\n            ],\n        })\n    }\n\n    matchModalOpen = () => {\n        this.setState({\n            match: true\n        })\n    }\n\n    matchModalClose = () => {\n        this.setState({\n            match: false,\n            matchP1: \"\",\n            matchP2: \"\",\n            matchDate: \"\",\n            venueValue: \"\",\n            courtValue: \"\",\n            courtSufcae: \"\",\n            set1P1Value: \"\",\n            set1P2Value: \"\",\n            set2P1Value: \"\",\n            set2P2Value: \"\",\n            set3P1Value: \"\",\n            set3P2Value: \"\",\n\n        })\n    }\n\n    courtModalOpen = () => {\n        this.setState({\n            court: true\n        })\n    }\n\n    courtModalClose = () => {\n        this.setState({\n            court: false,\n            venueValue: \"\",\n            courtValue: \"\",\n            courtSufcae: \"\",\n        })\n    }\n\n    venueModalOpen = () => {\n        this.setState({\n            venue: true\n        })\n    }\n\n    venueModalClose = () => {\n        this.setState({\n            venue: false\n        })\n    }\n\n    getVenuesCallback = (data) => {\n        let venueList = []\n\n        data.forEach(element => {\n            venueList.push(\n                <MenuItem key={element.name} value={element.name}>{element.name} ({element.address})</MenuItem>\n            )\n        })\n\n        this.setState({\n            venuesList: venueList\n        })\n    }\n\n    getSimplePlayersCallback = (data) => {\n        let playerList = []\n\n\n        data.forEach(element => {\n            playerList.push(\n                <MenuItem key={element.email} value={element.email}>{element.email} - {element.surname}</MenuItem>\n            )\n        })\n\n        this.setState({\n            playersList: playerList\n        })\n\n        getVenues(this.getVenuesCallback)\n    }\n\n    createNewPlayerCallback = () => {\n        alert(\"New Player created!\")\n\n        this.setState({\n            phones:\n                [\n                    {\n                        \"phoneNumber\": \"\",\n                        \"phoneType\": \"\"\n                    }\n                ],\n            email: \"\",\n            forename: \"\",\n            middleNames: \"\",\n            surname: \"\",\n            dateOfBirth: \"\",\n            elo: 1000,\n            player: false,\n            phoneHandler: [\n                <div key={1}>\n                    <TextField\n                        fullWidth\n                        label={\"phone\" + 1}\n                        margin=\"normal\"\n                        color=\"success\"\n                        onChange={(event) => this.phoneHandler(event, 0)}\n                    />\n                    <Autocomplete\n                        onChange={(event, value) => this.phoneTypeHandler(value, 0)}\n                        disablePortal\n                        id=\"test\"\n                        options={\n                            [\n                                {\n                                    label: \"Home\",\n                                    value: \"home\"\n                                },\n                                {\n                                    label: \"Mobile\",\n                                    value: \"mobile\"\n                                },\n                                {\n                                    label: \"Work\",\n                                    value: \"work\"\n                                },\n                            ]\n                        }\n                        renderInput={(params) => <TextField {...params} label={\"Phone\" + (1) + \" Type\"} />}\n                    />\n                </div>\n            ]\n        })\n    }\n\n    createNewMatchCllback = () => {\n        alert(\"New Match created!\")\n\n        this.setState({\n            matchP1: \"\",\n            matchP2: \"\",\n            matchDate: \"\",\n            venueValue: \"\",\n            courtValue: \"\",\n            courtSufcae: \"\",\n            set1P1Value: \"\",\n            set1P2Value: \"\",\n            set2P1Value: \"\",\n            set2P2Value: \"\",\n            set3P1Value: \"\",\n            set3P2Value: \"\",\n            match: false,\n        })\n    }\n\n    createNewMatch = () => {\n        let court = this.state.courtValue.split(',');\n        let setToSend = [];\n\n        if (this.state.set1P1Value && this.state.set1P2Value) {\n            setToSend.push(\n                {\n                    \"setNumber\": 1,\n                    \"p1Score\": parseInt(this.state.set1P1Value),\n                    \"p2Score\": parseInt(this.state.set1P2Value)\n                }\n            )\n        } else {\n            alert(\"You have to fill the scores\")\n        }\n\n        if (this.state.set2P1Value && this.state.set2P2Value) {\n            setToSend.push(\n                {\n                    \"setNumber\": 2,\n                    \"p1Score\": parseInt(this.state.set2P1Value),\n                    \"p2Score\": parseInt(this.state.set2P2Value)\n                }\n            )\n        }\n\n        if (this.state.set3P1Value && this.state.set3P2Value) {\n            setToSend.push(\n                {\n                    \"setNumber\": 3,\n                    \"p1Score\": parseInt(this.state.set3P1Value),\n                    \"p2Score\": parseInt(this.state.set3P2Value)\n                }\n            )\n        }\n\n\n        let sendState =\n        {\n            \"p1Email\": this.state.matchP1,\n            \"p2Email\": this.state.matchP2,\n            \"datePlayed\": this.state.matchDate,\n            \"court\": {\n                \"number\": court[0],\n                \"surface\": court[1],\n                \"venue\": {\n                    \"name\": this.state.venueValue\n                }\n            },\n            \"set\": setToSend\n        }\n\n        createNewMatch(this.createNewMatchCllback, sendState)\n    }\n\n    createNewPlayer = () => {\n        let middleNamesArray = []\n\n        if (this.state.middleNames !== \"\") {\n            middleNamesArray = this.state.middleNames.split(',')\n        }\n\n        let phoneToSend = this.state.phones;\n\n        if (phoneToSend[phoneToSend.length - 1].phoneNumber === \"\")\n            phoneToSend.pop();\n\n        let sendState =\n        {\n            \"email\": this.state.email,\n            \"forename\": this.state.forename,\n            \"middleNames\": middleNamesArray,\n            \"surname\": this.state.surname,\n            \"dateOfBirth\": this.state.dateOfBirth,\n            \"elo\": 1000,\n            \"phones\": phoneToSend\n        }\n\n        if (phoneToSend.length === 0) {\n            this.setState({\n                phones:\n                    [\n                        {\n                            \"phoneNumber\": \"\",\n                            \"phoneType\": \"\"\n                        }\n                    ]\n            })\n        }\n\n        createPlayer(this.createNewPlayerCallback, sendState);\n    }\n\n    createNewVenueCallback = () => {\n        alert(\"New Venue created!\")\n\n        this.setState({\n            addVenue: \"\",\n            addVenueAddress: \"\",\n            venue: false\n        })\n\n        getVenues(this.getVenuesCallback)\n    }\n\n    createNewVenue = () => {\n        let stateToSend = {\n            \"name\": this.state.addVenue,\n            \"address\": this.state.addVenueAddress\n        }\n\n        createNewVenue(this.createNewVenueCallback, stateToSend);\n    }\n\n    createNewCourtCallback = () => {\n        alert(\"New Court created!\")\n\n        this.setState({\n            newCourtNumber: 0,\n            addCourtSurface: \"\",\n            venueValue: \"\",\n            courtValue: \"\",\n            courtSufcae: \"\",\n            court: false\n        })\n    }\n\n    createNewCourt = () => {\n        let stateToSend = {\n            \"number\": this.state.newCourtNumber,\n            \"surface\": this.state.addCourtSurface,\n            \"venue\": {\n                \"name\": this.state.venueValue\n            }\n        }\n\n        createNewCourt(this.createNewCourtCallback, stateToSend)\n    }\n\n    addCourtSurfaceHandler = (event) => {\n        this.setState({\n            addCourtSurface: event.target.value\n        })\n    }\n\n    componentDidMount() {\n        getSimplePlayers(this.getSimplePlayersCallback);\n\n    }\n\n    render() {\n        return (\n            <div className={styles.admin}>\n                <div className={styles.cardContainer}>\n                    <Card sx={{ width: \"450px\", padding: \"15px 50px\" }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Player</div>\n                            <div className={styles.playerSub}>Add a new player</div>\n                            <div className={styles.buttonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.playerModalOpen}>\n                                    open\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card sx={{ width: \"450px\", padding: \"15px 50px\" }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Match</div>\n                            <div className={styles.playerSub}>Add a new match</div>\n                            <div className={styles.buttonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.matchModalOpen}>\n                                    open\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n                <div className={styles.cardContainer}>\n                    <Card sx={{ width: \"450px\", padding: \"15px 50px\" }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Venue</div>\n                            <div className={styles.playerSub}>Add a new venue</div>\n                            <div className={styles.buttonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.venueModalOpen}>\n                                    open\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                    <Card sx={{ width: \"450px\", padding: \"15px 50px\" }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Court</div>\n                            <div className={styles.playerSub}>Add a new court</div>\n                            <div className={styles.buttonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.courtModalOpen}>\n                                    open\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </div>\n                <Modal\n                    open={this.state.player}\n                    onClose={this.playerModalClose}\n                >\n                    <Card sx={{\n                        position: 'absolute',\n                        width: \"600px\",\n                        height: \"700px\",\n                        padding: \"15px 50px\",\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        overflowY: 'auto'\n                    }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Player</div>\n                            <div className={styles.playerSub}>Add a new player</div>\n                            <div className={styles.inputContainer}>\n                                <TextField\n                                    required\n                                    label=\"email\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"email\")}\n                                />\n\n                                <TextField\n                                    required\n                                    label=\"Forename\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"forename\")}\n                                />\n                                <TextField\n                                    label=\"Middle names\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"middleNames\")}\n                                />\n\n                                <TextField\n                                    required\n                                    id=\"outlined\"\n                                    label=\"Surname\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"surname\")}\n                                />\n\n                                <TextField\n                                    required\n                                    id=\"outlined\"\n                                    label=\"Date of Birth (DD/MM/YYYY)\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"dateOfBirth\")}\n                                />\n                                <TextField\n                                    required\n                                    label=\"ELO\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    defaultValue={1000}\n                                    type=\"number\"\n                                    disabled\n                                />\n                                {this.state.phoneHandler}\n                            </div>\n                            <div className={styles.playerButtonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.addNewPhone}>\n                                    add new phone\n                                </Button>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.createNewPlayer}>\n                                    create\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Modal>\n\n\n                <Modal\n                    open={this.state.match}\n                    onClose={this.matchModalClose}\n                >\n                    <Card sx={{\n                        position: 'absolute',\n                        width: \"600px\",\n                        padding: \"15px 50px\",\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                    }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Match</div>\n                            <div className={styles.playerSub}>Add a new match</div>\n                            <div className={styles.inputContainer}>\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"player1\">Player 1</InputLabel>\n                                    <Select labelId=\"player1\" label=\"Player 1\" value={this.state.matchP1} onChange={this.user1Handler}>\n                                        {this.state.playersList}\n                                    </Select>\n                                </FormControl>\n                                <div style={{ paddingBottom: \"20px\" }} />\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"player2\">Player 2</InputLabel>\n                                    <Select key=\"hihihihihi\" labelId=\"player2\" label=\"Player 2\" value={this.state.matchP2} onChange={this.user2Handler}>\n                                        {this.state.playersList}\n                                    </Select>\n                                </FormControl>\n\n                                <TextField\n                                    required\n                                    label=\"Date of Play (DD/MM/YYYY)\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"matchDate\")}\n                                />\n                                <div style={{ paddingBottom: \"20px\" }} />\n\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"venue\">Venue (Address)</InputLabel>\n                                    <Select labelId=\"venue\" label=\"Venue (Address)\" value={this.state.venueValue} onChange={this.venueHandler}>\n                                        {this.state.venuesList}\n                                    </Select>\n                                </FormControl>\n                                <div style={{ paddingBottom: \"20px\" }} />\n                                <FormControl fullWidth disabled={this.state.courtDisabled}>\n                                    <InputLabel id=\"court\">{this.state.courtDisabled ? \"No court in this venue\" : \"Court (Surface Type)\"}</InputLabel>\n                                    <Select labelId=\"court\" label={this.state.courtDisabled ? \"No court in this venue\" : \"Court (Surface Type)\"} value={this.state.courtValue} onChange={this.courtHandler}>\n                                        {this.state.courtList}\n                                    </Select>\n                                </FormControl>\n\n\n                                <div className={styles.setScoreContainer}>\n                                    <div className={styles.eachSetContainer}>\n                                        <div className={styles.setHeader}>Set 1</div>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            label=\"Player 1 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set1P1Value\")}\n                                        />\n\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            label=\"Player 2 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set1P2Value\")}\n                                        />\n                                    </div>\n                                    <div className={styles.eachSetContainer}>\n                                        <div className={styles.setHeader}>Set 2</div>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            label=\"Player 1 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set2P1Value\")}\n                                        />\n\n                                        <TextField\n                                            fullWidth\n                                            required\n                                            label=\"Player 2 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set2P2Value\")}\n                                        />\n                                    </div>\n                                    <div className={styles.eachSetContainer}>\n                                        <div className={styles.setHeader}>Set 3</div>\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            label=\"Player 1 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set3P1Value\")}\n                                        />\n\n                                        <TextField\n                                            required\n                                            fullWidth\n                                            label=\"Player 2 Score\"\n                                            margin=\"normal\"\n                                            color=\"success\"\n                                            type=\"number\"\n                                            onChange={(event) => this.inputHandler(event, \"set3P2Value\")}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className={styles.createButtonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.createNewMatch}>\n                                    create\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Modal>\n\n\n\n\n                <Modal\n                    open={this.state.venue}\n                    onClose={this.venueModalClose}\n                >\n                    <Card sx={{\n                        position: 'absolute',\n                        width: \"600px\",\n                        padding: \"15px 50px\",\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                    }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Venue</div>\n                            <div className={styles.playerSub}>Add a new venue</div>\n                            <div className={styles.inputContainer}>\n                                <TextField\n                                    required\n                                    label=\"name\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"addVenue\")}\n                                />\n\n                                <TextField\n                                    required\n                                    label=\"address\"\n                                    margin=\"normal\"\n                                    color=\"success\"\n                                    onChange={(event) => this.inputHandler(event, \"addVenueAddress\")}\n                                />\n                            </div>\n                            <div className={styles.createButtonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.createNewVenue}>\n                                    create\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Modal>\n\n\n\n\n\n\n\n\n\n                <Modal\n                    open={this.state.court}\n                    onClose={this.courtModalClose}\n                >\n                    <Card sx={{\n                        position: 'absolute',\n                        width: \"600px\",\n                        padding: \"15px 50px\",\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                    }}>\n                        <CardContent>\n                            <div className={styles.playerHeader}>Court</div>\n                            <div className={styles.playerSub}>Add a new court</div>\n                            <div className={styles.inputContainer}>\n                                <div>New Court to add: {this.state.newCourtNumber}</div>\n                                <div style={{ paddingBottom: \"5px\" }} />\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"venue\">Venue (Address)</InputLabel>\n                                    <Select labelId=\"venue\" label=\"Venue (Address)\" value={this.state.venueValue} onChange={this.venueHandler}>\n                                        {this.state.venuesList}\n                                    </Select>\n                                </FormControl>\n                                <div style={{ paddingBottom: \"20px\" }} />\n                                <FormControl fullWidth>\n                                    <InputLabel id=\"court-surface\">Court Surface</InputLabel>\n                                    <Select labelId=\"corut-surface\" label=\"Court Surface\" value={this.state.addCourtSurface} onChange={this.addCourtSurfaceHandler}>\n                                        <MenuItem value=\"grass\">Grass</MenuItem>\n                                        <MenuItem value=\"clay\">Clay</MenuItem>\n                                        <MenuItem value=\"hardcourt\">Hardcourt</MenuItem>\n                                    </Select>\n                                </FormControl>\n                            </div>\n                            <div className={styles.createButtonContainer}>\n                                <Button variant=\"contained\" color=\"success\" onClick={this.createNewCourt}>\n                                    create\n                                </Button>\n                            </div>\n                        </CardContent>\n                    </Card>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default AdminPage","import React from \"react\";\n\nimport { getMatchWithNames, getVenues } from \"../../../axios/axios\";\nimport styles from './MatchPage.module.css'\n\nimport Card from \"../../../components/Card/Card\";\n\nimport Button from '@mui/material/Button';\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemButton from '@mui/material/ListItemButton';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport Checkbox from '@mui/material/Checkbox';\nimport { Link } from \"react-router-dom\";\n\nclass MatchPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            matchPage: null,\n            venues: [],\n            venuesChecked: [],\n            surface: [\"Grass\", \"Clay\", \"Hardcourt\"],\n            surfacesChecked: [],\n            venueQuery: \"\",\n            surfaceQuery: \"\",\n        }\n    }\n\n    handleVenueToggle = (value) => {\n        let currentIndex = this.state.venuesChecked.indexOf(value);\n        let newChecked = [...this.state.venuesChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        let newQuery;\n        if (newChecked.length === 0) {\n            newQuery = \"\"\n        } else {\n            newQuery = \"venue=\" + newChecked.join() + \"&\"\n        }\n\n        this.setState({\n            venuesChecked: [...newChecked],\n            venueQuery: newQuery\n        })\n\n        getMatchWithNames(this.getMatchWithNamesCallback, newQuery + this.state.surfaceQuery);\n    }\n\n    handleSurfaceToggle = (value) => {\n        let currentIndex = this.state.surfacesChecked.indexOf(value);\n        let newChecked = [...this.state.surfacesChecked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        let newQuery;\n        if (newChecked.length === 0) {\n            newQuery = \"\"\n        } else {\n            newQuery = \"surface=\" + newChecked.join().toLocaleLowerCase() + \"&\"\n        }\n\n        this.setState({\n            surfacesChecked: [...newChecked],\n            surfaceQuery: newQuery\n        })\n\n        getMatchWithNames(this.getMatchWithNamesCallback, this.state.venueQuery + newQuery);\n    }\n\n    getVenuesCallback = (data) => {\n        let venues = []\n\n        data.forEach(element => {\n            venues.push(\n                element.name\n            )\n        })\n\n        this.setState({\n            venues: venues\n        })\n    }\n\n    getMatchWithNamesCallback = (data) => {\n        let matchPage = []\n        for (let i = 0; i < data.length; i += 2) {\n            console.log(data[i])\n            console.log(data[i + 1])\n            matchPage.push(\n                <Card key={i} styleName=\"cardWhite round relative shadow\" inlineStyles={{ marginLeft: \"auto\", marginRight: \"auto\", width: \"60%\", marginBottom: \"50px\", display: \"flex\", flexDirection: \"column\" }}>\n                    <div>\n                        <div className={styles.matchTitle}>\n                            <div>Match in {data[i].venueName}</div>\n                            <div>{data[i].dateOfPlayed}</div>\n                        </div>\n                        <div className={styles.courtDetail}>\n                            <div>Court: {data[i].courtNumber}</div>\n                            <div>Type: {data[i].surface}</div>\n                        </div>\n                        <div className={styles.userDetails}>\n                            <div>\n                                <div className={data[i].email === data[i].winner ? styles.winner : styles.plain}>{data[i].elo}<div className={data[i].email === data[i].winner ? styles.arrowUp : styles.arrowDown} /></div>\n                                <div className={data[i].email === data[i].winner ? styles.winner : styles.plain}>{data[i].fullName}</div>\n\n                            </div>\n                            <div className={styles.versus}>VS</div>\n                            <div>\n                                <div className={data[i + 1].email === data[i].winner ? styles.winner : styles.plain}>{data[i + 1].elo}<div className={data[i + 1].email === data[i].winner ? styles.arrowUp : styles.arrowDown} /></div>\n                                <div className={data[i + 1].email === data[i].winner ? styles.winner : styles.plain}>{data[i + 1].fullName}</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={styles.buttonContainer}>\n                        <Button className={styles.linkContainer}>\n                            <Link className={styles.matchDetails} to={\"/match/\" + data[i].id}>\n                                Match Details...\n                            </Link>\n                        </Button>\n                    </div>\n                </Card>\n            )\n        }\n\n        this.setState({\n            matchPage: matchPage\n        })\n\n        getVenues(this.getVenuesCallback);\n    }\n\n    componentDidMount() {\n        getMatchWithNames(this.getMatchWithNamesCallback, \"\");\n    }\n\n    render() {\n        return (\n            <div className={styles.match}>\n                <div className={styles.matchPageHeader}>Matches</div>\n                <div className={styles.matchOption}>\n                    <List sx={{ width: '360px', maxWidth: 480, bgcolor: 'background.paper' }}>\n                        {this.state.venues.map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n\n                            return (\n                                <ListItem\n                                    key={value}\n                                    disablePadding\n                                >\n                                    <ListItemButton role={undefined} onClick={() => this.handleVenueToggle(value)} dense>\n                                        <ListItemText id={labelId} primary={value} />\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={this.state.venuesChecked.indexOf(value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                    </ListItemButton>\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                    <List sx={{ width: '100%', maxWidth: 480, bgcolor: 'background.paper' }}>\n                        {this.state.surface.map((value) => {\n                            const labelId = `checkbox-list-label-${value}`;\n\n                            return (\n                                <ListItem\n                                    key={value}\n                                    disablePadding\n                                >\n                                    <ListItemButton role={undefined} onClick={() => this.handleSurfaceToggle(value)} dense>\n                                        <ListItemText id={labelId} primary={value} />\n                                        <ListItemIcon>\n                                            <Checkbox\n                                                edge=\"start\"\n                                                checked={this.state.surfacesChecked.indexOf(value) !== -1}\n                                                tabIndex={-1}\n                                                disableRipple\n                                                inputProps={{ 'aria-labelledby': labelId }}\n                                            />\n                                        </ListItemIcon>\n                                    </ListItemButton>\n                                </ListItem>\n                            );\n                        })}\n                    </List>\n                </div>\n                {this.state.matchPage}\n            </div>\n        )\n    }\n\n}\n\nexport default MatchPage;","import React from \"react\";\nimport { getMatches, getFullName } from \"../../../axios/axios\";\nimport { Card } from \"@mui/material\";\nimport { CardContent } from \"@mui/material\";\nimport styles from './MatchPage.module.css'\n\n\nclass MatchDetailPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            matchPage: {},\n            p1user: \"\",\n            p1userELO: \"\",\n            p2user: \"\",\n            p2userELO: \"\",\n            court: {\n                number: 0,\n                surface: \"\",\n                venue: {\n                    name: \"\",\n                }\n            },\n            datePlayed: \"\",\n            set:\n                [\n                    {\n                        \"setNumber\": 1,\n                        \"p1Score\": 0,\n                        \"p2Score\": 0\n                    },\n                    {\n                        \"setNumber\": 2,\n                        \"p1Score\": 0,\n                        \"p2Score\": 0\n                    },\n                    {\n                        \"setNumber\": 3,\n                        \"p1Score\": 0,\n                        \"p2Score\": 0\n                    }\n                ],\n            winner: 0,\n            setTag: [],\n        }\n    }\n\n    getFullNameCallback = (data, user) => {\n        if (user === 1) {\n            this.setState({\n                p1user: data.fullName,\n                p1userELO: data.elo\n            })\n        } else if (user === 2) {\n            this.setState({\n                p2user: data.fullName,\n                p2userELO: data.elo\n            })\n        }\n    }\n\n    getMatchesCallback = (data) => {\n        console.log(data)\n        getFullName(this.getFullNameCallback, data[0].p1Email, 1)\n        getFullName(this.getFullNameCallback, data[0].p2Email, 2)\n\n\n        let p1 = 0;\n        let p2 = 0;\n\n        let setTag = []\n\n        data[0].set.forEach(element => {\n            if (element.p1Score > element.p2Score) {\n                p1++;\n            } else {\n                p2++;\n            }\n            setTag.push(\n                <div className={styles.setContainer}>\n                    <div className={styles.setHeader}>\n                        Set {element.setNumber}\n                    </div>\n                    <div className={styles.scoresContainer}>\n                        <div>{element.p1Score}</div>\n                        <div>{element.p2Score}</div>\n                    </div>\n                </div>\n            )\n        })\n\n        this.setState({\n            court: data[0].court,\n            datePlayed: data[0].datePlayed,\n            set: data[0].set,\n            winner: p1 > p2 ? 1 : 2,\n            setTag: setTag\n        })\n    }\n\n    componentDidMount() {\n        getMatches(this.getMatchesCallback, \"?id=\" + this.props.match.params.id)\n    }\n\n    render() {\n        return (\n            <div className={styles.match}>\n                <Card sx={{ width: \"75%\", padding: \"10px 5px\", borderRadius: \"10px\", margin: \"0px auto\" }}>\n                    <CardContent>\n                        <div>\n                            <div className={styles.matchTitle}>\n                                <div>Match in {this.state.court.venue.name}</div>\n                                <div>{this.state.datePlayed}</div>\n                            </div>\n                            <div className={styles.courtDetail}>\n                                <div>Court: {this.state.court.number}</div>\n                                <div>Type: {this.state.court.surface}</div>\n                            </div>\n                            <div className={styles.userDetails}>\n                                <div>\n                                    <div className={this.state.winner === 1 ? styles.winner : styles.plain}>{this.state.p1userELO}<div className={this.state.winner === 1 ? styles.arrowUp : styles.arrowDown} /></div>\n                                    <div className={this.state.winner === 1 ? styles.winner : styles.plain}>{this.state.p1user}</div>\n\n                                </div>\n                                <div className={styles.versus}>VS</div>\n                                <div>\n                                    <div className={this.state.winner === 2 ? styles.winner : styles.plain}>{this.state.p2userELO}<div className={this.state.winner === 2 ? styles.arrowUp : styles.arrowDown} /></div>\n                                    <div className={this.state.winner === 2 ? styles.winner : styles.plain}>{this.state.p2user}</div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={styles.setsContainer}>\n                            {this.state.setTag}\n                        </div>\n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n\n}\n\nexport default MatchDetailPage;","import { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom'\nimport Header from './components/Header/Header.jsx'\nimport './App.css';\nimport MainPage from './assets/views/MainPage/MainPage.jsx';\nimport PlayerPage from './assets/views/PlayerPage/PlayerPage.jsx';\nimport AdminPage from './assets/views/AdminPage/AdminPage.jsx';\nimport MatchPage from './assets/views/MatchPage/MatchPage.jsx';\nimport MatchDetailPage from './assets/views/MatchPage/MatchDetail.jsx';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"Tennis\">\n        <Header location={this.props.location} />\n        <Switch>\n          <Route path='/admin' component={AdminPage} />\n          <Route path='/match/:id' component={MatchDetailPage} />\n          <Route path='/match' component={MatchPage} />\n          <Route path='/player' component={PlayerPage} />\n          <Route path='/' exact component={MainPage} />\n          <Redirect to='/' />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n\n\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n\n\n  , document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"MainPage_main__289Qo\",\"image\":\"MainPage_image__24dXG\",\"greeting\":\"MainPage_greeting__1GCRO\",\"latestHeader\":\"MainPage_latestHeader__2OWzT\",\"text\":\"MainPage_text__Ac1gy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"PlayerPage_player__1IdNr\",\"playerPageHeader\":\"PlayerPage_playerPageHeader__2Bf9L\",\"rowContainer\":\"PlayerPage_rowContainer__1qmwR\",\"phoneContainer\":\"PlayerPage_phoneContainer__1jiKa\",\"nameContainer\":\"PlayerPage_nameContainer__35CEg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"headerNotMain\":\"Header_headerNotMain__2vlLA\",\"signContainer\":\"Header_signContainer__1AAgW\",\"link\":\"Header_link__2wI74\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonBlack\":\"Button_buttonBlack__1GuWj\",\"buttonTransparent\":\"Button_buttonTransparent__2tX_G\",\"buttonWhite\":\"Button_buttonWhite__2Eqie\"};"],"sourceRoot":""}